{"version":3,"sources":["serviceWorker.js","hereConfig.js","Controls/SettingsObject.jsx","actions/map.js","actions/actions.js","reducers/map.js","reducers/resulthandler.js","reducers/index.js","Map/extraMarkers.js","Map/hereTileLayer.js","Map/Map.jsx","Controls/Settings.jsx","Controls/SearchControl.jsx","Controls/Controls.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","hereConfig","SettingsObject","Object","classCallCheck","this","userInput","geocodeResults","isochrones","receivedAt","results","isFetching","isFetchingIsochrones","settings","range","min","max","step","value","interval","mode","rangetype","zoomToIsochrones","controlIndex","type","Date","now","zoomToPoint","latLng","processGeocodeResponse","json","arguments","length","undefined","reverse","dispatch","Response","View","processedResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Result","Symbol","iterator","next","done","address","Location","LocationType","push","title","Address","Label","description","PostalCode","displayposition","lat","DisplayPosition","Latitude","lng","Longitude","selected","err","return","parseGeocodeResponse","resultHandler","handlerCode","receiveGeocodeResults","setReverseGeocodeResult","receiveIsochronesResults","updateTextInput","inputValue","updateSelectedAddress","fetchHereIsochrones","payload","requestIsochronesResults","isolineParameters","center","start","ranges","rangeInSeconds","intervalInSeconds","join","rangeInMeters","intervalInMeters","processIsolineSettings","url","URL","params","objectSpread","app_id","app_code","search","URLSearchParams","fetch","then","response","isoline","parseIsochronesResponse","processIsochronesResponse","requestGeocodeResults","addIsochronesControl","textInputIndex","initialState","event","controlIdx","mapEvents","state","action","console","log","handlerMessage","NO_GEOCODE_RESULTS","NO_ISOCHRONES_RESULTS","handlerTopic","initialIsochronesControlsState","controls","rootReducer","combineReducers","isochronesControls","concat","toConsumableArray","filter","item","i","map","control","result","ExtraMarkers","Icon","L","extend","options","iconSize","iconAnchor","popupAnchor","shadowAnchor","shadowSize","className","prefix","extraClasses","shape","icon","innerHTML","markerColor","svgBorderColor","svgOpacity","iconColor","number","svg","initialize","setOptions","createIcon","div","document","createElement","_createInner","bgPos","style","backgroundPosition","x","y","_setIconStyles","iconColorStyle","iconNumber","img","name","anchor","leafletName","size","divideBy","marginLeft","marginTop","width","height","createShadow","HereTileLayer","HERE","subdomains","minZoom","maxZoom","scheme","resource","mapId","format","appId","appCode","schemeStart","split","tileResolution","retina","tileServer","indexOf","tileUrl","_attributionUrl","template","prototype","call","_attributionText","onAdd","_attributionBBoxes","_fetchAttributionBBoxes","onRemove","_map","attributionControl","removeAttribution","off","_findCopyrightBBox","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","_parseAttributionBBoxes","JSON","parse","responseText","open","send","providers","normal","boxes","j","box","on","_attributionProviders","visibleProviders","zoom","getZoom","visibleBounds","getBounds","minLevel","maxLevel","overlaps","attributions","provider","alt","label","attributionText","addAttribution","here","opts","hereReducedDay","hereHybridGreyDay","markersLayer","layerGroup","isochronesLayer","southWest","northEast","mapParams","zoomControl","maxBounds","latLngBounds","layers","Map","createPane","opacity","baseMaps","HERE reduced.day","HERE hybrid.grey.day","addTo","position","brand","DomUtil","create","addControl","props","cnt","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","clearLayerByIndex","addIsochronesMarker","isMarkerPresent","prevProps","clearLayers","isochroneResultsReversed","scaleHsl","chroma","scale","colors","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","isochrone","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","component","isochroneComponent","addIsochrones","eventFeatures","featureGroup","eachLayer","layer","index","addLayer","fitBounds","paddingTopLeft","flyTo","prevState","updateMarkers","updateIsochrones","updateMap","idx","removeLayer","isPresent","obj","isoIndex","maxresults","prox","geometry","color","polygon","coordString","fillColor","weight","pane","bindTooltip","permanent","sticky","getTooltip","setTooltipContent","openTooltip","unbindTooltip","isochronesMarker","toString","that","marker","draggable","e","updatePosition","target","getLatLng","react_default","a","id","React","Component","connect","ownProps","transportModes","pedestrian","traffic","car","consumptionModel","customConsumptionDetails","truck","shippedHazardousGoods","limitedWeight","weightPerAxle","tunnelCategory","rangeTypes","distance","time","Settings","_this$props","controlindex","_this$props2","updateSettings","_this$props3","_ref","_this$props4","_ref2","_this$props5","_this","_this$props6","rangeSettings","onChange","intervalSettings","Button","Group","basic","keys","key","active","onClick","handleClickMode","Divider","handleRangetype","build","discrete","inverted","Input","placeholder","handleRangeValueChange","bind","handleIntervalValueChange","SearchControl","possibleConstructorReturn","getPrototypeOf","handleClick","titleProps","newIndex","activeIndex","setState","handleSearchChange","fetchGeocodeResults","handleResultSelect","handleFetchIsochrones","handleZoom","dataChanged","assertThisInitialized","isochronesTitle","debounce","userTextInput","searchtext","text","data","_this2","isochronesResults","Segment","margin","Popup","trigger","content","react_edit_inline2_default","validate","customValidateText","activeClassName","paramName","change","minWidth","display","padding","fontWeight","fontSize","outline","border","circular","float","handleShow","fitted","Search","onSearchChange","onResultSelect","fluid","input","loading","disabled","isResultSelected","Container","Accordion","Title","Content","Controls_Settings","segmentStyle","zIndex","top","left","maxHeight","Controls","handleAddIsochronesControl","handleSettings","flex","minHeight","overflow","object","Controls_SearchControl","marginBottom","App","toast","src_Map_Map","src_Controls_Controls","react_semantic_toasts_build","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","apply","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a582339.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const hereConfig = {\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA'\n}\n","export default class SettingsObject {\n  constructor() {\n    this.userInput = ''\n    this.geocodeResults = []\n    this.isochrones = {\n      receivedAt: null,\n      results: []\n    }\n    this.isFetching = false\n    this.isFetchingIsochrones = false\n    this.settings = {\n      range: {\n        min: 1,\n        max: 500,\n        step: 1,\n        value: 60\n      },\n      interval: {\n        min: 1,\n        max: 60,\n        step: 1,\n        value: 10\n      },\n      mode: 'car',\n      rangetype: 'distance'\n    }\n  }\n}\n","export const ZOOM_TO_ISOCHRONES = 'ZOOM_TO_ISOCHRONES'\nexport const ZOOM_TO_POINT = 'ZOOM_TO_POINT'\n\nexport const zoomToIsochrones = controlIndex => ({\n  type: ZOOM_TO_ISOCHRONES,\n  receivedAt: Date.now(),\n  controlIndex\n})\n\nexport const zoomToPoint = latLng => ({\n  type: ZOOM_TO_POINT,\n  receivedAt: Date.now(),\n  latLng\n})\n","import { hereConfig } from '../hereConfig'\nimport SettingsObject from '../Controls/SettingsObject'\nimport { zoomToIsochrones } from './map'\n\nexport const REQUEST_GEOCODE_RESULTS = 'REQUEST_GEOCODE_RESULTS'\nexport const REQUEST_ISOCHRONES_RESULTS = 'REQUEST_ISOCHRONES_RESULTS'\nexport const RECEIVE_GEOCODE_RESULTS = 'RECEIVE_GEOCODE_RESULTS'\nexport const RECEIVE_REVERSE_GEOCODE_RESULTS = 'RECEIVE_REVERSE_GEOCODE_RESULTS'\nexport const SET_USERTEXTINPUT = 'SET_USERTEXTINPUT'\nexport const ADD_ISOCHRONESCONTROL = 'ADD_ISOCHRONESCONTROL'\nexport const UPDATE_TEXTINPUT = 'UPDATE_TEXTINPUT'\nexport const UPDATE_SELECTED_ADDRESS = 'UPDATE_SELECTED_ADDRESS'\nexport const REMOVE_ISOCHRONES_CONTROL = 'REMOVE_ISOCHRONES_CONTROL'\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS'\nexport const RECEIVE_ISOCHRONES_RESULTS = 'RECEIVE_ISOCHRONES_RESULTS'\nexport const RESULT_HANDLER = 'RESULT_HANDLER'\n\nconst parseGeocodeResponse = (json, latLng) => {\n  if (json.Response && json.Response.View.length > 0) {\n    let processedResults = []\n\n    for (const address of json.Response.View[0].Result) {\n      if (address.Location && address.Location.LocationType === 'point') {\n        processedResults.push({\n          title: address.Location.Address.Label,\n          description: address.Location.Address.PostalCode,\n          displayposition: {\n            lat: latLng\n              ? latLng.lat\n              : address.Location.DisplayPosition.Latitude,\n            lng: latLng\n              ? latLng.lng\n              : address.Location.DisplayPosition.Longitude\n          },\n          selected: false\n        })\n      }\n    }\n    return processedResults\n  }\n\n  // if not addresses are found return without coordinates\n  return [\n    {\n      title: '',\n      description: '',\n      displayposition: {\n        lat: latLng.lat,\n        lng: latLng.lng\n      },\n      selected: false\n    }\n  ]\n}\n\nconst parseIsochronesResponse = json => {\n  if (json.response && json.response.isoline.length > 0) {\n    const isolinesReversed = json.response.isoline.reverse()\n    return isolinesReversed\n  }\n  return []\n}\n\nconst processIsochronesResponse = (json, controlIndex) => dispatch => {\n  const results = parseIsochronesResponse(json)\n\n  if (results.length == 0) {\n    dispatch(\n      resultHandler({\n        handlerCode: 'NO_ISOCHRONES_RESULTS'\n      })\n    )\n  }\n  dispatch(receiveIsochronesResults(controlIndex, results))\n  if (results.length > 0) dispatch(zoomToIsochrones(controlIndex))\n}\n\nconst processGeocodeResponse = (\n  json,\n  controlIndex,\n  latLng = false,\n  reverse = false\n) => dispatch => {\n  const results = parseGeocodeResponse(json, latLng)\n\n  // if no address can be found\n  if (results[0].title.length == 0) {\n    dispatch(\n      resultHandler({\n        handlerCode: 'NO_GEOCODE_RESULTS'\n      })\n    )\n  }\n  dispatch(receiveGeocodeResults(controlIndex, results, reverse))\n  if (reverse) dispatch(setReverseGeocodeResult(controlIndex, results))\n}\n\nexport const receiveGeocodeResults = (controlIndex, results, reverse) => ({\n  type: RECEIVE_GEOCODE_RESULTS,\n  controlIndex,\n  results: results,\n  receivedAt: Date.now(),\n  reverse: reverse\n})\n\nexport const receiveIsochronesResults = (controlIndex, results) => ({\n  type: RECEIVE_ISOCHRONES_RESULTS,\n  controlIndex,\n  results: results,\n  receivedAt: Date.now(),\n  reverse: false\n})\n\nconst setReverseGeocodeResult = (controlIndex, results) => dispatch => {\n  if (results[0]) {\n    dispatch(\n      updateTextInput({\n        controlIndex: controlIndex,\n        inputValue: results[0] ? results[0].title : ''\n      })\n    )\n\n    dispatch(\n      updateSelectedAddress({\n        controlIndex: controlIndex,\n        inputValue: results[0] ? results[0].title : ''\n      })\n    )\n    //dispatch(zoomToPoint(action.results[0].displayposition))\n  }\n}\n\nconst processIsolineSettings = (settings, center) => {\n  const isolineParameters = {}\n\n  isolineParameters.start = center.lat + ',' + center.lng\n  isolineParameters.mode = 'fastest;' + settings.mode\n  isolineParameters.rangetype = settings.rangetype\n\n  // seconds\n  const ranges = []\n  if (settings.rangetype === 'time') {\n    let rangeInSeconds = settings.range.value * 60\n    const intervalInSeconds = settings.interval.value * 60\n\n    // 600/100\n    while (rangeInSeconds > 0) {\n      ranges.push(rangeInSeconds)\n      rangeInSeconds -= intervalInSeconds\n    }\n\n    isolineParameters.range = ranges.join(',')\n\n    // meters\n  } else if (settings.rangetype === 'distance') {\n    let rangeInMeters = settings.range.value * 1000\n    const intervalInMeters = settings.interval.value * 1000\n\n    // 600/100\n    while (rangeInMeters > 0) {\n      ranges.push(rangeInMeters)\n      rangeInMeters -= intervalInMeters\n    }\n\n    isolineParameters.range = ranges.join(',')\n  }\n  return isolineParameters\n}\n\nexport const fetchHereGeocode = payload => dispatch => {\n  dispatch(requestGeocodeResults({ controlIndex: payload.controlIndex }))\n\n  let url = new URL('https://geocoder.api.here.com/6.2/geocode.json'),\n    params = {\n      app_id: hereConfig.appId,\n      app_code: hereConfig.appCode,\n      searchtext: payload.inputValue\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(json => dispatch(processGeocodeResponse(json, payload.controlIndex)))\n}\n\nexport const fetchHereIsochrones = payload => dispatch => {\n  dispatch(requestIsochronesResults(payload.controlIndex))\n\n  const isolineParameters = processIsolineSettings(\n    payload.settings,\n    payload.center\n  )\n\n  let url = new URL(\n      'https://isoline.route.api.here.com/routing/7.2/calculateisoline.json'\n    ),\n    params = {\n      app_id: hereConfig.appId,\n      app_code: hereConfig.appCode,\n      ...isolineParameters\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(json =>\n      dispatch(processIsochronesResponse(json, payload.controlIndex))\n    )\n}\n\nexport const fetchHereReverseGeocode = payload => dispatch => {\n  dispatch(\n    requestGeocodeResults({ controlIndex: payload.isoIndex, reverse: true })\n  )\n\n  const radius = 250\n\n  let url = new URL(\n      'https://reverse.geocoder.api.here.com/6.2/reversegeocode.json'\n    ),\n    params = {\n      app_id: hereConfig.appId,\n      app_code: hereConfig.appCode,\n      mode: 'retrieveAddresses',\n      maxresults: 1,\n      prox: [payload.lat, payload.lng, radius].join(',')\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(json =>\n      dispatch(\n        processGeocodeResponse(\n          json,\n          payload.isoIndex,\n          {\n            lat: payload.lat,\n            lng: payload.lng\n          },\n          true\n        )\n      )\n    )\n}\n\nexport const requestIsochronesResults = controlIndex => ({\n  type: REQUEST_ISOCHRONES_RESULTS,\n  controlIndex\n})\n\nexport const requestGeocodeResults = payload => ({\n  type: REQUEST_GEOCODE_RESULTS,\n  ...payload\n})\n\nexport const addIsochronesControl = () => ({\n  type: ADD_ISOCHRONESCONTROL,\n  payload: new SettingsObject()\n})\n\nexport const removeIsochronesControl = controlIndex => ({\n  type: REMOVE_ISOCHRONES_CONTROL,\n  payload: controlIndex\n})\n\nexport const updateTextInput = textInputIndex => ({\n  type: UPDATE_TEXTINPUT,\n  payload: textInputIndex\n})\n\nexport const updateSelectedAddress = textInputIndex => ({\n  type: UPDATE_SELECTED_ADDRESS,\n  payload: textInputIndex\n})\n\nexport const updateSettings = payload => ({\n  type: UPDATE_SETTINGS,\n  payload: payload\n})\n\nexport const resultHandler = payload => ({\n  type: RESULT_HANDLER,\n  handlerCode: payload.handlerCode,\n  receivedAt: Date.now()\n})\n","import { ZOOM_TO_ISOCHRONES, ZOOM_TO_POINT } from '../actions/map'\n\nconst initialState = {\n  event: null,\n  controlIdx: null,\n  receivedAt: null,\n  latLng: null\n}\n\nconst mapEvents = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case ZOOM_TO_ISOCHRONES:\n      return {\n        ...state,\n        event: action.type,\n        controlIndex: action.controlIndex,\n        receivedAt: action.receivedAt\n      }\n    case ZOOM_TO_POINT:\n      return {\n        ...state,\n        event: action.type,\n        latLng: action.latLng,\n        receivedAt: action.receivedAt\n      }\n    default:\n      return state\n  }\n}\n\nexport default mapEvents\n","import { RESULT_HANDLER } from '../actions/actions'\n\nconst handlerMessage = {\n  NO_GEOCODE_RESULTS:\n    'Sorry, unfortunately no addresses can be found, please try a different location.',\n  NO_ISOCHRONES_RESULTS:\n    'Sorry, unfortunately no isochrones can be computed, please try a different location.'\n}\n\nconst handlerTopic = {\n  NO_GEOCODE_RESULTS: 'Unable to find addresses here',\n  NO_ISOCHRONES_RESULTS: 'Unable to build isochrones here'\n}\n\nconst initialState = {\n  handlerCode: null,\n  handlerMessage: null,\n  handlerTopic: null,\n  receivedAt: null\n}\n\nconst resultHandler = (state = initialState, action) => {\n  switch (action.type) {\n    case RESULT_HANDLER:\n      return {\n        ...state,\n        handlerCode: action.handlerCode,\n        handlerTopic: handlerTopic[action.handlerCode],\n        handlerMessage: handlerMessage[action.handlerCode],\n        receivedAt: action.receivedAt\n      }\n    default:\n      return state\n  }\n}\n\nexport default resultHandler\n","import { combineReducers } from 'redux'\nimport {\n  REQUEST_GEOCODE_RESULTS,\n  REQUEST_ISOCHRONES_RESULTS,\n  RECEIVE_GEOCODE_RESULTS,\n  RECEIVE_REVERSE_GEOCODE_RESULTS,\n  RECEIVE_ISOCHRONES_RESULTS,\n  ADD_ISOCHRONESCONTROL,\n  REMOVE_ISOCHRONES_CONTROL,\n  UPDATE_TEXTINPUT,\n  UPDATE_SELECTED_ADDRESS,\n  UPDATE_SETTINGS\n} from '../actions/actions'\n\nimport mapEvents from './map'\nimport resultHandler from './resulthandler'\n\nimport SettingsObject from '../Controls/SettingsObject'\n\nconst initialIsochronesControlsState = {\n  controls: [new SettingsObject()]\n}\n\nconst isochronesControls = (state = initialIsochronesControlsState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case ADD_ISOCHRONESCONTROL:\n      return {\n        ...state,\n        controls: [...state.controls, action.payload]\n      }\n    case REMOVE_ISOCHRONES_CONTROL:\n      return {\n        ...state,\n        controls: state.controls.filter(\n          (item, i) => i !== action.payload.controlIndex\n        )\n      }\n    case UPDATE_TEXTINPUT:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.payload.controlIndex\n            ? { ...control, userInput: action.payload.inputValue }\n            : control\n        )\n      }\n    case REQUEST_ISOCHRONES_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? { ...control, isFetchingIsochrones: true }\n            : control\n        )\n      }\n    case REQUEST_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? { ...control, isFetching: true, reverse: action.reverse }\n            : control\n        )\n      }\n    case RECEIVE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetching: false,\n                geocodeResults: action.results,\n                reverse: action.reverse\n              }\n            : control\n        )\n      }\n    case RECEIVE_REVERSE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetching: false,\n                geocodeResults: action.results,\n                reverse: action.reverse\n              }\n            : control\n        )\n      }\n    case UPDATE_SELECTED_ADDRESS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.payload.controlIndex\n            ? {\n                ...control,\n                geocodeResults: control.geocodeResults.map(result =>\n                  result.title === action.payload.inputValue &&\n                  result.title.length > 0\n                    ? { ...result, selected: true }\n                    : { ...result, selected: false }\n                )\n              }\n            : control\n        )\n      }\n    case UPDATE_SETTINGS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                settings: action.payload.settings\n              }\n            : control\n        )\n      }\n    case RECEIVE_ISOCHRONES_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetchingIsochrones: false,\n                isochrones: {\n                  results: action.results,\n                  receivedAt: action.receivedAt\n                }\n              }\n            : control\n        )\n      }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  isochronesControls,\n  mapEvents,\n  resultHandler\n})\n\nexport default rootReducer\n","import * as L from 'leaflet'\n\nvar ExtraMarkers = {}\n\nExtraMarkers.Icon = L.Icon.extend({\n  options: {\n    iconSize: [35, 45],\n    iconAnchor: [17, 42],\n    popupAnchor: [1, -32],\n    shadowAnchor: [10, 12],\n    shadowSize: [36, 16],\n    className: '',\n    prefix: '',\n    extraClasses: '',\n    shape: 'circle',\n    icon: '',\n    innerHTML: '',\n    markerColor: 'red',\n    svgBorderColor: '#fff',\n    svgOpacity: 1,\n    iconColor: '#fff',\n    number: '',\n    svg: false\n  },\n  initialize: function(options) {\n    options = L.Util.setOptions(this, options)\n  },\n  createIcon: function() {\n    var div = document.createElement('div'),\n      options = this.options\n    if (options.icon) {\n      div.innerHTML = this._createInner()\n    }\n    if (options.innerHTML) {\n      div.innerHTML = options.innerHTML\n    }\n    if (options.bgPos) {\n      div.style.backgroundPosition =\n        -options.bgPos.x + 'px ' + -options.bgPos.y + 'px'\n    }\n    if (!options.svg) {\n      this._setIconStyles(div, options.shape + '-' + options.markerColor)\n    } else {\n      this._setIconStyles(div, 'svg')\n    }\n    return div\n  },\n  _createInner: function() {\n    var iconColorStyle = '',\n      iconNumber = '',\n      options = this.options\n    if (options.iconColor) {\n      iconColorStyle = \"style='color: \" + options.iconColor + \"' \"\n    }\n    if (options.number) {\n      iconNumber = \"number='\" + options.number + \"' \"\n    }\n    if (options.svg) {\n      var svg =\n        '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.529271 95.44922\" style=\"fill:' +\n        options.markerColor +\n        ';stroke:' +\n        options.svgBorderColor +\n        ';fill-opacity:' +\n        options.svgOpacity +\n        ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-139.52 -173.21)\"><path d=\"m174.28 173.21c-19.199 0.00035-34.764 15.355-34.764 34.297 0.007 6.7035 1.5591 12.813 5.7461 18.854l0.0234 0.0371 28.979 42.262 28.754-42.107c3.1982-5.8558 5.9163-11.544 6.0275-19.045-0.0001-18.942-15.565-34.298-34.766-34.297z\"/></g></svg>'\n      if (options.shape === 'square') {\n        svg =\n          '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.457038 96.523441\" style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-545.27 -658.39)\"><path d=\"m545.27 658.39v65.301h22.248l12.48 31.223 12.676-31.223h22.053v-65.301h-69.457z\"/></g></svg>'\n      }\n      if (options.shape === 'star') {\n        svg =\n          '<svg style=\"top:0; fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" viewBox=\"0 0 77.690999 101.4702\"><g transform=\"translate(-101.15 -162.97)\"><g transform=\"matrix(1 0 0 1.0165 -65.712 -150.28)\"><path d=\"m205.97 308.16-11.561 11.561h-16.346v16.346l-11.197 11.197 11.197 11.197v15.83h15.744l11.615 33.693 11.467-33.568 0.125-0.125h16.346v-16.346l11.197-11.197-11.197-11.197v-15.83h-15.83l-11.561-11.561z\"/></g></g></svg>'\n      }\n      if (options.shape === 'penta') {\n        svg =\n          '<svg style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\"   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 71.550368 96.362438\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-367.08 -289.9)\"><path d=\"m367.08 322.5 17.236-32.604h36.151l18.164 32.25-35.665 64.112z\"/></g></svg>'\n      }\n      return (\n        svg +\n        '<i ' +\n        iconNumber +\n        iconColorStyle +\n        \"class='\" +\n        options.extraClasses +\n        ' ' +\n        options.prefix +\n        ' ' +\n        options.icon +\n        \"'></i>\"\n      )\n    }\n    return (\n      '<i ' +\n      iconNumber +\n      iconColorStyle +\n      \"class='\" +\n      options.extraClasses +\n      ' ' +\n      options.prefix +\n      ' ' +\n      options.icon +\n      \"'></i>\"\n    )\n  },\n  _setIconStyles: function(img, name) {\n    var options = this.options,\n      size = L.point(options[name === 'shadow' ? 'shadowSize' : 'iconSize']),\n      anchor,\n      leafletName\n    if (name === 'shadow') {\n      anchor = L.point(options.shadowAnchor || options.iconAnchor)\n      leafletName = 'shadow'\n    } else {\n      anchor = L.point(options.iconAnchor)\n      leafletName = 'icon'\n    }\n    if (!anchor && size) {\n      anchor = size.divideBy(2, true)\n    }\n\n    img.className =\n      'leaflet-marker-' +\n      leafletName +\n      ' extra-marker extra-marker-' +\n      name +\n      ' ' +\n      options.className\n    if (anchor) {\n      img.style.marginLeft = -anchor.x + 'px'\n      img.style.marginTop = -anchor.y + 'px'\n    }\n    if (size) {\n      img.style.width = size.x + 'px'\n      img.style.height = size.y + 'px'\n    }\n  },\n  createShadow: function() {\n    var div = document.createElement('div')\n    this._setIconStyles(div, 'shadow')\n    return div\n  }\n})\n\nExtraMarkers.icon = function(options) {\n  return new ExtraMarkers.Icon(options)\n}\n\nexport default ExtraMarkers\n","import * as L from 'leaflet'\n\nvar HereTileLayer = {}\n\n// 🍂class TileLayer.HERE\n// Tile layer for HERE maps tiles.\nHereTileLayer.HERE = L.TileLayer.extend({\n  options: {\n    subdomains: '1234',\n    minZoom: 2,\n    maxZoom: 18,\n\n    // 🍂option scheme: String = 'normal.day'\n    // The \"map scheme\", as documented in the HERE API.\n    scheme: 'normal.day',\n\n    // 🍂option resource: String = 'maptile'\n    // The \"map resource\", as documented in the HERE API.\n    resource: 'maptile',\n\n    // 🍂option mapId: String = 'newest'\n    // Version of the map tiles to be used, or a hash of an unique map\n    mapId: 'newest',\n\n    // 🍂option format: String = 'png8'\n    // Image format to be used (`png8`, `png`, or `jpg`)\n    format: 'png8',\n\n    // 🍂option appId: String = ''\n    // Required option. The `app_id` provided as part of the HERE credentials\n    appId: '',\n\n    // 🍂option appCode: String = ''\n    // Required option. The `app_code` provided as part of the HERE credentials\n    appCode: ''\n  },\n\n  initialize: function initialize(options) {\n    options = L.setOptions(this, options)\n\n    // Decide if this scheme uses the aerial servers or the basemap servers\n    var schemeStart = options.scheme.split('.')[0]\n    options.tileResolution = 256\n\n    if (L.Browser.retina) {\n      options.tileResolution = 512\n    }\n\n    //    {Base URL}{Path}/{resource (tile type)}/{map id}/{scheme}/{zoom}/{column}/{row}/{size}/{format}\n    //    ?app_id={YOUR_APP_ID}\n    //    &app_code={YOUR_APP_CODE}\n    //    &{param}={value}\n\n    var path =\n      '/{resource}/2.1/{resource}/{mapId}/{scheme}/{z}/{x}/{y}/{tileResolution}/{format}?app_id={appId}&app_code={appCode}'\n    var attributionPath =\n      '/maptile/2.1/copyright/{mapId}?app_id={appId}&app_code={appCode}'\n\n    var tileServer = 'base.maps.api.here.com'\n    if (\n      // eslint-disable-next-line\n      schemeStart == 'satellite' ||\n      // eslint-disable-next-line\n      schemeStart == 'terrain' ||\n      // eslint-disable-next-line\n      schemeStart == 'hybrid'\n    ) {\n      tileServer = 'aerial.maps.api.here.com'\n    }\n    if (options.scheme.indexOf('.traffic.') !== -1) {\n      tileServer = 'traffic.maps.api.here.com'\n    }\n\n    var tileUrl = 'https://{s}.' + tileServer + path\n\n    this._attributionUrl = L.Util.template(\n      'https://1.' + tileServer + attributionPath,\n      this.options\n    )\n\n    L.TileLayer.prototype.initialize.call(this, tileUrl, options)\n\n    this._attributionText = ''\n  },\n\n  onAdd: function onAdd(map) {\n    L.TileLayer.prototype.onAdd.call(this, map)\n\n    if (!this._attributionBBoxes) {\n      this._fetchAttributionBBoxes()\n    }\n  },\n\n  onRemove: function onRemove(map) {\n    L.TileLayer.prototype.onRemove.call(this, map)\n\n    this._map.attributionControl.removeAttribution(this._attributionText)\n\n    this._map.off('moveend zoomend resetview', this._findCopyrightBBox, this)\n  },\n\n  _fetchAttributionBBoxes: function _onMapMove() {\n    var xmlhttp = new XMLHttpRequest()\n    xmlhttp.onreadystatechange = L.bind(function() {\n      // eslint-disable-next-line\n      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n        this._parseAttributionBBoxes(JSON.parse(xmlhttp.responseText))\n      }\n    }, this)\n    xmlhttp.open('GET', this._attributionUrl, true)\n    xmlhttp.send()\n  },\n\n  _parseAttributionBBoxes: function _parseAttributionBBoxes(json) {\n    if (!this._map) {\n      return\n    }\n    var providers = json[this.options.scheme.split('.')[0]] || json.normal\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].boxes) {\n        for (var j = 0; j < providers[i].boxes.length; j++) {\n          var box = providers[i].boxes[j]\n          providers[i].boxes[j] = L.latLngBounds([\n            [box[0], box[1]],\n            [box[2], box[3]]\n          ])\n        }\n      }\n    }\n\n    this._map.on('moveend zoomend resetview', this._findCopyrightBBox, this)\n\n    this._attributionProviders = providers\n\n    this._findCopyrightBBox()\n  },\n\n  _findCopyrightBBox: function _findCopyrightBBox() {\n    if (!this._map) {\n      return\n    }\n    var providers = this._attributionProviders\n    var visibleProviders = []\n    var zoom = this._map.getZoom()\n    var visibleBounds = this._map.getBounds()\n\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].minLevel < zoom && providers[i].maxLevel > zoom)\n        if (!providers[i].boxes) {\n          // No boxes = attribution always visible\n          visibleProviders.push(providers[i])\n          break\n        }\n\n      for (var j = 0; j < providers[i].boxes.length; j++) {\n        var box = providers[i].boxes[j]\n        if (visibleBounds.overlaps(box)) {\n          visibleProviders.push(providers[i])\n          break\n        }\n      }\n    }\n\n    var attributions = [\n      '<a href=\"https://legal.here.com/terms/serviceterms/gb/\">HERE maps</a>'\n    ]\n    // eslint-disable-next-line\n    for (var i = 0; i < visibleProviders.length; i++) {\n      var provider = visibleProviders[i]\n      attributions.push(\n        '<abbr title=\"' + provider.alt + '\">' + provider.label + '</abbr>'\n      )\n    }\n\n    var attributionText = '© ' + attributions.join(', ') + '. '\n\n    if (attributionText !== this._attributionText) {\n      this._map.attributionControl.removeAttribution(this._attributionText)\n      this._map.attributionControl.addAttribution(\n        (this._attributionText = attributionText)\n      )\n    }\n  }\n})\n\nHereTileLayer.here = function(opts) {\n  return new HereTileLayer.HERE(opts)\n}\n\nexport default HereTileLayer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport L from 'leaflet'\nimport chroma from 'chroma-js'\nimport ExtraMarkers from './extraMarkers'\nimport HereTileLayer from './hereTileLayer'\nimport { fetchHereReverseGeocode } from '../actions/actions'\nimport PropTypes from 'prop-types'\n\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\n// const CartoDB_VoyagerLabelsUnder = L.tileLayer(\n//   'https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png',\n//   {\n//     attribution:\n//       '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n//     subdomains: 'abcd',\n//     maxZoom: 19\n//   }\n// )\n\nconst hereReducedDay = HereTileLayer.here({\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA',\n  scheme: 'reduced.day'\n})\n\nconst hereHybridGreyDay = HereTileLayer.here({\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA',\n  scheme: 'hybrid.grey.day'\n})\n\nconst markersLayer = L.layerGroup()\n\nconst isochronesLayer = L.layerGroup()\n\nconst southWest = L.latLng(-90, -180),\n  northEast = L.latLng(90, 180),\n  bounds = L.latLngBounds(southWest, northEast)\n\nconst mapParams = {\n  center: [25.95681, -35.729687],\n  zoomControl: false,\n  maxBounds: bounds,\n  zoom: 2,\n  layers: [markersLayer, isochronesLayer, hereReducedDay]\n}\n\nclass Map extends React.Component {\n  static propTypes = {\n    isochronesControls: PropTypes.array.isRequired,\n    mapEvents: PropTypes.object,\n    dispatch: PropTypes.func.isRequired\n  }\n  componentDidMount() {\n    this.map = L.map('map', mapParams)\n\n    var isochronesPane = this.map.createPane('isochronesPane')\n\n    isochronesPane.style.opacity = 0.9\n\n    const baseMaps = {\n      'HERE reduced.day': hereReducedDay,\n      'HERE hybrid.grey.day': hereHybridGreyDay\n    }\n\n    L.control.layers(baseMaps).addTo(this.map)\n\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n    const brand = L.control({\n      position: 'bottomright'\n    })\n    brand.onAdd = function(map) {\n      var div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://gis.ops.com\" target=\"_blank\"><div class=\"gis-ops-logo\"></div></a>'\n      return div\n    }\n    this.map.addControl(brand)\n  }\n\n  updateMarkers() {\n    const { isochronesControls } = this.props\n\n    //markersLayer.clearLayers()\n\n    let cnt = 0\n    for (let isochrones of isochronesControls) {\n      // add marker\n      if (isochrones.geocodeResults.length > 0) {\n        for (let location of isochrones.geocodeResults) {\n          if (location.selected) {\n            // if a address is geocoded normally, clear layer beforehand\n            if (!isochrones.reverse) this.clearLayerByIndex(cnt)\n            this.addIsochronesMarker(location, cnt, this.isMarkerPresent(cnt))\n          }\n        }\n      }\n\n      cnt += 1\n    }\n  }\n\n  updateIsochrones(prevProps) {\n    const { isochronesControls } = this.props\n\n    isochronesLayer.clearLayers()\n\n    for (let i = 0; i < isochronesControls.length; i++) {\n      if (\n        isochronesControls[i].isochrones.results.length > 0\n        //&& isochronesControls[i].isochrones.receivedAt > prevIsochronesControls[i].isochrones.receivedAt\n      ) {\n        let cnt = 0\n        const isochroneResultsReversed =\n          isochronesControls[i].isochrones.results\n        const scaleHsl = chroma\n          .scale(['#f44242', '#f4be41', '#41f497'])\n          .mode('hsl')\n          .colors(isochronesControls[i].isochrones.results.length)\n\n        for (const isochrone of isochroneResultsReversed) {\n          for (const isochroneComponent of isochrone.component) {\n            this.addIsochrones(\n              isochroneComponent.shape,\n              isochronesControls[i].settings.rangetype === 'time'\n                ? isochrone.range / 60 + ' minutes'\n                : isochrone.range / 1000 + ' kilometers',\n              scaleHsl[cnt],\n              i\n            )\n          }\n          cnt += 1\n        }\n      }\n    }\n  }\n\n  updateMap(prevProps) {\n    const { mapEvents } = this.props\n    if (mapEvents.receivedAt > prevProps.mapEvents.receivedAt) {\n      let eventFeatures = L.featureGroup()\n\n      switch (mapEvents.event) {\n        case 'ZOOM_TO_ISOCHRONES':\n          isochronesLayer.eachLayer(function(layer) {\n            if (layer.options.index === mapEvents.controlIndex)\n              eventFeatures.addLayer(layer)\n          })\n\n          this.map.fitBounds(eventFeatures.getBounds(), {\n            paddingTopLeft: [100, 100]\n          })\n\n          break\n        case 'ZOOM_TO_POINT':\n          this.map.flyTo(mapEvents.latLng, 14)\n\n          break\n        default:\n          break\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateMarkers()\n    this.updateIsochrones(prevProps)\n    this.updateMap(prevProps)\n  }\n\n  clearLayerByIndex(idx) {\n    markersLayer.eachLayer(function(layer) {\n      if (layer.options.index === idx) markersLayer.removeLayer(layer)\n    })\n  }\n\n  isMarkerPresent(idx) {\n    let isPresent = false\n    markersLayer.eachLayer(function(layer) {\n      if (layer.options.index === idx) isPresent = true\n    })\n    return isPresent\n  }\n\n  updatePosition(obj) {\n    const { dispatch } = this.props\n    dispatch(\n      fetchHereReverseGeocode({\n        isoIndex: obj.isoIndex,\n        ...obj.latLng\n      })\n    )\n  }\n\n  addIsochrones(geometry, range, color, index) {\n    L.polygon(\n      geometry.map(function(coordString) {\n        return coordString.split(',')\n      }),\n      {\n        fillColor: color,\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        pane: 'isochronesPane',\n        index: index\n      }\n    )\n      .addTo(isochronesLayer)\n      .bindTooltip('Range: ' + range, { permanent: false, sticky: true })\n  }\n  addIsochronesMarker(location, idx, isPresent = false) {\n    if (!isPresent) {\n      const isochronesMarker = ExtraMarkers.icon({\n        icon: 'fa-number',\n        markerColor: 'purple',\n        shape: 'star',\n        prefix: 'fa',\n        number: (idx + 1).toString()\n      })\n\n      const that = this\n\n      L.marker(location.displayposition, {\n        icon: isochronesMarker,\n        draggable: true,\n        index: idx\n      })\n        .addTo(markersLayer)\n        .bindTooltip(location.title + ', ' + location.description, {\n          permanent: false\n        })\n        .openTooltip()\n        .on('dragend', function(e) {\n          that.updatePosition({\n            latLng: e.target.getLatLng(),\n            isoIndex: e.target.options.index\n          })\n        })\n    } else {\n      markersLayer.eachLayer(function(layer) {\n        if (layer.options.index === idx) {\n          if (location.title.length > 0) {\n            if (layer.getTooltip()) {\n              layer.setTooltipContent(\n                location.title + ', ' + location.description\n              )\n            } else {\n              layer\n                .bindTooltip(location.title + ', ' + location.description, {\n                  permanent: false\n                })\n                .openTooltip()\n            }\n          } else {\n            layer.unbindTooltip()\n          }\n        }\n      })\n    }\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state, ownProps)\n  const isochronesControls = state.isochronesControls.controls\n  const mapEvents = state.mapEvents\n  return {\n    isochronesControls,\n    mapEvents\n  }\n}\n\nexport default connect(mapStateToProps)(Map)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Slider } from 'react-semantic-ui-range'\nimport { Label, Input, Button, Divider } from 'semantic-ui-react'\nimport { updateSettings } from '../actions/actions'\n\nconst transportModes = {\n  pedestrian: {\n    type: ['fastest', 'shortest'],\n    traffic: ['enabled', 'disabled']\n  },\n  car: {\n    type: ['fastest', 'shortest', 'traffic'],\n    traffic: ['enabled', 'disabled'],\n    consumptionModel: ['default', 'standard'],\n    customConsumptionDetails: {}\n  },\n  truck: {\n    type: ['fastest'],\n    shippedHazardousGoods: [],\n    limitedWeight: {},\n    weightPerAxle: {},\n    height: {},\n    width: {},\n    length: {},\n    tunnelCategory: [],\n    consumptionModel: ['default', 'standard'],\n    customConsumptionDetails: {}\n  }\n}\n\nconst rangeTypes = {\n  distance: {},\n  time: {}\n}\n\nclass Settings extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  static propTypes = {\n    userTextInput: PropTypes.string,\n    results: PropTypes.array,\n    isFetching: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    controlindex: PropTypes.number.isRequired\n  }\n\n  updateSettings() {\n    const { controls, controlindex, dispatch } = this.props\n\n    dispatch(\n      updateSettings({\n        controlIndex: controlindex,\n        settings: controls[controlindex].settings\n      })\n    )\n  }\n\n  handleClickMode(mode) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.mode = mode\n\n    this.updateSettings()\n  }\n\n  handleRangetype(rangetype) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.rangetype = rangetype\n\n    this.updateSettings()\n  }\n\n  handleRangeValueChange(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.range.value = value\n\n    this.updateSettings()\n  }\n\n  handleIntervalValueChange(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.interval.value = value\n\n    this.updateSettings()\n  }\n\n  render() {\n    const { controls, controlindex } = this.props\n\n    const rangetype =\n      controls[controlindex].settings.rangetype === 'time'\n        ? ' minutes'\n        : ' kilometers'\n\n    const rangeSettings = {\n      settings: {\n        ...controls[controlindex].settings.range,\n        start: controls[controlindex].settings.range.value,\n        onChange: value => {\n          controls[controlindex].settings.range.value = value\n\n          if (\n            controls[controlindex].settings.range.value <\n            controls[controlindex].settings.interval.value\n          ) {\n            controls[controlindex].settings.interval.value =\n              controls[controlindex].settings.range.value\n          }\n\n          controls[controlindex].settings.interval.max =\n            controls[controlindex].settings.range.value\n\n          this.updateSettings()\n        }\n      }\n    }\n\n    const intervalSettings = {\n      settings: {\n        ...controls[controlindex].settings.interval,\n        start: controls[controlindex].settings.interval.value,\n        onChange: value => {\n          controls[controlindex].settings.interval.value = value\n\n          this.updateSettings()\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"mb3\">\n          <Label size=\"small\" color=\"purple\">\n            {'Travel mode'}\n          </Label>\n          <div className=\"mt3\">\n            <Button.Group basic size=\"small\">\n              {transportModes &&\n                Object.keys(transportModes).map((key, i) => (\n                  <Button\n                    active={key === controls[controlindex].settings.mode}\n                    key={i}\n                    mode={key}\n                    onClick={() => this.handleClickMode(key)}>\n                    {key}\n                  </Button>\n                ))}\n            </Button.Group>\n          </div>\n        </div>\n        <Divider />\n\n        <div className=\"mb3\">\n          <Label size=\"small\" color=\"purple\">\n            {'Range type'}\n          </Label>\n          <div className=\"mt3\">\n            <Button.Group basic size=\"small\">\n              {rangeTypes &&\n                Object.keys(rangeTypes).map((key, i) => (\n                  <Button\n                    active={key === controls[controlindex].settings.rangetype}\n                    key={i}\n                    mode={key}\n                    onClick={() => this.handleRangetype(key)}>\n                    {key}\n                  </Button>\n                ))}\n            </Button.Group>\n          </div>\n        </div>\n        <Divider />\n\n        <div>\n          <Label size=\"small\" color=\"purple\">\n            {'Maximum range'}\n          </Label>\n          <div className=\"mt3\">\n            <Slider\n              discrete\n              color=\"grey\"\n              value={controls[controlindex].settings.range.value}\n              inverted={false}\n              settings={rangeSettings.settings}\n            />\n            <div className=\"mt2 flex justify-between items-center\">\n              <Input\n                size=\"mini\"\n                placeholder=\"Enter Value\"\n                onChange={this.handleRangeValueChange.bind(this)}\n              />\n              <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                {controls[controlindex].settings.range.value + rangetype}\n              </Label>\n            </div>\n          </div>\n        </div>\n        <Divider />\n        <div>\n          <Label size=\"small\" color=\"purple\">\n            {'Interval step'}\n          </Label>\n          <div className=\"mt3\">\n            <Slider\n              discrete\n              color=\"grey\"\n              value={controls[controlindex].settings.interval.value}\n              inverted={false}\n              settings={intervalSettings.settings}\n            />\n            <div className=\"mt2 flex justify-between items-center\">\n              <Input\n                size=\"mini\"\n                placeholder=\"Enter Value\"\n                onChange={this.handleIntervalValueChange.bind(this)}\n              />\n              <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                {controls[controlindex].settings.interval.value + rangetype}\n              </Label>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { controls } = state.isochronesControls\n  return {\n    controls\n  }\n}\n\nexport default connect(mapStateToProps)(Settings)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Settings from './Settings'\nimport {\n  Segment,\n  Search,\n  Icon,\n  Container,\n  Popup,\n  Accordion,\n  Divider,\n  Button\n} from 'semantic-ui-react'\nimport {\n  updateTextInput,\n  fetchHereGeocode,\n  updateSelectedAddress,\n  removeIsochronesControl,\n  fetchHereIsochrones\n} from '../actions/actions'\n\nimport { zoomToPoint, zoomToIsochrones } from '../actions/map'\n\nimport InlineEdit from 'react-edit-inline2'\nimport { debounce } from 'throttle-debounce'\n\nclass SearchControl extends React.Component {\n  static propTypes = {\n    userTextInput: PropTypes.string.isRequired,\n    results: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    isFetchingIsochrones: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    isochronesResults: PropTypes.array,\n    controlindex: PropTypes.number.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.dataChanged = this.dataChanged.bind(this)\n\n    this.state = {\n      isochronesTitle: 'Isochrones -' + (props.controlindex + 1),\n      activeIndex: 0\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleResultSelect = this.handleResultSelect.bind(this)\n    this.fetchGeocodeResults = debounce(1000, this.fetchGeocodeResults)\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  fetchGeocodeResults() {\n    const { dispatch, userTextInput, controlindex } = this.props\n    dispatch(\n      fetchHereGeocode({\n        inputValue: userTextInput,\n        controlIndex: controlindex\n      })\n    )\n  }\n\n  handleSearchChange = event => {\n    const { dispatch, controlindex } = this.props\n\n    dispatch(\n      updateTextInput({\n        inputValue: event.target.value,\n        controlIndex: controlindex\n      })\n    )\n    this.fetchGeocodeResults()\n  }\n\n  // handleSelectionChange = event => {\n  //   console.log(event.target.value);\n  // };\n\n  handleResultSelect = (e, { result }) => {\n    const { dispatch, controlindex } = this.props\n\n    dispatch(\n      updateTextInput({\n        inputValue: result.title,\n        controlIndex: controlindex\n      })\n    )\n\n    dispatch(\n      updateSelectedAddress({\n        inputValue: result.title,\n        controlIndex: controlindex\n      })\n    )\n\n    dispatch(zoomToPoint(result.displayposition))\n  }\n\n  customValidateText(text) {\n    return text.length > 0 && text.length < 64\n  }\n\n  dataChanged(data) {\n    this.setState({ ...data })\n  }\n\n  handleFetchIsochrones = () => {\n    const { dispatch, controlindex, controls } = this.props\n\n    let displayposition\n    for (let result of controls[controlindex].geocodeResults) {\n      if (result.selected) displayposition = result.displayposition\n    }\n\n    dispatch(\n      fetchHereIsochrones({\n        controlIndex: controlindex,\n        settings: controls[controlindex].settings,\n        center: displayposition\n      })\n    )\n  }\n\n  handleZoom = () => {\n    const { dispatch, controlindex } = this.props\n    dispatch(zoomToIsochrones(controlindex))\n  }\n\n  render() {\n    const {\n      isFetching,\n      isFetchingIsochrones,\n      userTextInput,\n      results,\n      controls,\n      controlindex,\n      isochronesResults\n    } = this.props\n\n    const handleRemoveControl = () => {\n      if (controls.length > 1) {\n        this.props.dispatch(\n          removeIsochronesControl({ controlIndex: controlindex })\n        )\n      }\n    }\n\n    const isResultSelected = () => {\n      for (let result of results) {\n        if (result.selected) return false\n      }\n\n      return true\n    }\n    return (\n      <Segment style={{ margin: '20px' }}>\n        <div className=\"mb2 justify-between flex flex-row items-center\">\n          <div>\n            <Popup\n              trigger={<Icon name=\"pencil\" />}\n              content=\"Edit name\"\n              size=\"mini\"\n            />\n\n            <InlineEdit\n              validate={this.customValidateText}\n              activeClassName=\"editing\"\n              text={this.state.isochronesTitle}\n              paramName=\"isochronesTitle\"\n              change={this.dataChanged}\n              style={{\n                minWidth: 150,\n                display: 'inline-block',\n                margin: '0 0 0 0',\n                padding: 0,\n                fontWeight: 'bold',\n                fontSize: 15,\n                outline: 'none',\n                border: 'none'\n              }}\n            />\n          </div>\n          {isochronesResults && isochronesResults.length > 0 && (\n            <Popup\n              trigger={\n                <Button\n                  circular\n                  size=\"mini\"\n                  icon=\"unhide\"\n                  style={{ float: 'right' }}\n                  onClick={this.handleShow}\n                  className=\"pr3\"\n                />\n              }\n              content=\"Toggle on map\"\n              size=\"mini\"\n            />\n          )}\n          {isochronesResults && isochronesResults.length > 0 && (\n            <Popup\n              trigger={\n                <Button\n                  circular\n                  icon=\"expand arrows alternate\"\n                  style={{ float: 'right' }}\n                  size=\"mini\"\n                  onClick={this.handleZoom}\n                  className=\"pr4\"\n                />\n              }\n              content=\"Zoom\"\n              size=\"mini\"\n            />\n          )}\n          <Popup\n            trigger={\n              <Button\n                circular\n                size=\"mini\"\n                icon=\"remove\"\n                style={{ float: 'right' }}\n                onClick={handleRemoveControl}\n              />\n            }\n            content=\"Remove\"\n            size=\"mini\"\n          />\n        </div>\n        <Divider fitted />\n        <div className=\"flex justify-between items-center mt3\">\n          <Search\n            onSearchChange={this.handleSearchChange}\n            onResultSelect={this.handleResultSelect}\n            type=\"text\"\n            fluid\n            input={{ fluid: true }}\n            loading={isFetching}\n            className=\"flex-grow-1 mr2\"\n            results={results}\n            value={userTextInput}\n            placeholder=\"Find Address ...\"\n          />\n          <Popup\n            trigger={\n              <Button\n                circular\n                loading={isFetchingIsochrones}\n                disabled={isResultSelected()}\n                color=\"purple\"\n                icon=\"globe\"\n                onClick={this.handleFetchIsochrones}\n              />\n            }\n            content=\"Compute isochrones\"\n            size=\"mini\"\n          />\n        </div>\n        <Container className=\"mt2\">\n          <Accordion>\n            <Accordion.Title\n              active={this.state.activeIndex === 0}\n              index={0}\n              onClick={this.handleClick}>\n              <Icon name=\"dropdown\" />\n              Settings\n            </Accordion.Title>\n            <Accordion.Content active={this.state.activeIndex === 0}>\n              <Settings controlindex={controlindex} />\n            </Accordion.Content>\n          </Accordion>\n        </Container>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userTextInput =\n    state.isochronesControls.controls[ownProps.controlindex].userInput\n  const results =\n    state.isochronesControls.controls[ownProps.controlindex].geocodeResults\n  const isochronesResults =\n    state.isochronesControls.controls[ownProps.controlindex].isochrones.results\n  const isFetching =\n    state.isochronesControls.controls[ownProps.controlindex].isFetching\n  const isFetchingIsochrones =\n    state.isochronesControls.controls[ownProps.controlindex]\n      .isFetchingIsochrones\n  const controls = state.isochronesControls.controls\n\n  const mapEvents = state.mapEvents\n\n  return {\n    userTextInput,\n    results,\n    isFetching,\n    isFetchingIsochrones,\n    controls,\n    mapEvents,\n    isochronesResults\n  }\n}\n\nexport default connect(mapStateToProps)(SearchControl)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Segment, Button, Popup } from 'semantic-ui-react'\nimport SearchControl from './SearchControl'\nimport { addIsochronesControl } from '../actions/actions'\n\nconst segmentStyle = {\n  zIndex: 999,\n  position: 'absolute',\n  width: '400px',\n  top: '0',\n  left: '10px',\n  maxHeight: 'calc(100vh)',\n  padding: '0px'\n}\n\nclass Controls extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleAddIsochronesControl = this.handleAddIsochronesControl.bind(this)\n  }\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired\n  }\n\n  handleAddIsochronesControl = () => {\n    this.props.dispatch(addIsochronesControl())\n  }\n\n  handleSettings = () => {\n    console.log('open settings')\n  }\n\n  render() {\n    const { controls } = this.props\n    return (\n      <Segment className=\"flex flex-column\" style={segmentStyle}>\n        {/*<div\n          style={{ height: '50px', borderBottom: '2px solid #A333C8' }}\n          className=\"flex justify-between items-center pa3\">\n          <span className=\"b f4\">HERE Isolines App</span>\n          <Popup\n            trigger={\n              <Icon\n                name=\"setting\"\n                size=\"large\"\n                color=\"black\"\n                onClick={this.handleSettings}\n              />\n            }\n            content=\"Settings\"\n            size=\"mini\"\n          />\n        </div>*/}\n        <div>\n          <div style={{ flex: 1, display: 'flex', minHeight: '0px' }}>\n            <div style={{ flex: 1, overflow: 'auto' }}>\n              <div\n                style={{\n                  maxHeight: 'calc(100vh - 2vw)',\n                  overflow: 'auto'\n                }}>\n                {controls &&\n                  controls.map((object, i) => (\n                    <SearchControl key={i} controlindex={i} />\n                  ))}\n                <div\n                  style={{\n                    marginLeft: '20px',\n                    marginBottom: '20px',\n                    marginTop: '0px'\n                  }}>\n                  <Popup\n                    trigger={\n                      <Button\n                        circular\n                        icon=\"plus\"\n                        className=\"ma3\"\n                        onClick={this.handleAddIsochronesControl}\n                      />\n                    }\n                    content=\"Add\"\n                    size=\"mini\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { controls } = state.isochronesControls\n  return {\n    controls\n  }\n}\n\nexport default connect(mapStateToProps)(Controls)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Map from './Map/Map'\nimport Controls from './Controls/Controls'\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts'\n\nclass App extends React.Component {\n  static propTypes = {\n    resultHandler: PropTypes.object\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { resultHandler } = this.props\n\n    toast({\n      type: 'info',\n      icon: 'info',\n      title: resultHandler.handlerTopic,\n      description: resultHandler.handlerMessage,\n      time: 5000\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Map />\n        <Controls className={'isoControls'} />\n        <SemanticToastContainer position=\"bottom-center\" />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { resultHandler } = state\n  return {\n    resultHandler\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}