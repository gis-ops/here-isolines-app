{"version":3,"sources":["serviceWorker.js","hereConfig.js","Controls/SettingsObject.jsx","actions/actions.js","reducers/index.js","Map/extraMarkers.js","Map/Map.jsx","Controls/Settings.jsx","Controls/SearchControl.jsx","Controls/Controls.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","hereConfig","SettingsObject","Object","classCallCheck","this","userInput","geocodeResults","isFetching","isFetchingIsochrones","settings","range","min","max","step","value","interval","mode","parseResponse","json","latLng","Response","View","length","processedResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Result","Symbol","iterator","next","done","address","Location","LocationType","push","title","Address","Label","description","PostalCode","displayposition","lat","DisplayPosition","Latitude","lng","Longitude","selected","err","return","receiveReverseGeocodeResults","controlIndex","type","results","arguments","join","receivedAt","Date","now","reverse","fetchHereGeocode","payload","dispatch","requestGeocodeResults","url","URL","params","app_id","app_code","searchtext","inputValue","search","URLSearchParams","fetch","then","response","receiveGeocodeResults","fetchHereIsochrones","console","log","requestIsochronesResults","fetchHereReverseGeocode","isoIndex","maxresults","prox","action","updateTextInput","updateSelectedAddress","setReverseGeocodeResult","addIsochronesControl","textInputIndex","initialIsochronesControlsState","controls","rootReducer","combineReducers","isochronesControls","state","objectSpread","concat","toConsumableArray","filter","item","i","map","control","result","ExtraMarkers","Icon","L","extend","options","iconSize","iconAnchor","popupAnchor","shadowAnchor","shadowSize","className","prefix","extraClasses","shape","icon","innerHTML","markerColor","svgBorderColor","svgOpacity","iconColor","number","svg","initialize","setOptions","createIcon","div","document","createElement","_createInner","bgPos","style","backgroundPosition","x","y","_setIconStyles","iconColorStyle","iconNumber","img","name","anchor","leafletName","size","divideBy","marginLeft","marginTop","width","height","createShadow","CartoDB_VoyagerLabelsUnder","tileLayer","attribution","subdomains","maxZoom","markersLayer","layerGroup","mapParams","center","zoomControl","zoom","layers","Map","position","addTo","brand","onAdd","DomUtil","create","addControl","prevProps","prevState","isochronesMarkers","props","cnt","isochrones","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","clearLayerByIndex","isMarkerPresent","addIsochronesMarker","idx","eachLayer","layer","index","removeLayer","isPresent","obj","setTooltipContent","isochronesMarker","toString","that","marker","draggable","bindTooltip","permanent","on","e","updatePosition","target","getLatLng","react_default","a","id","React","Component","connect","ownProps","transportModes","pedestrian","traffic","car","consumptionModel","customConsumptionDetails","truck","shippedHazardousGoods","limitedWeight","weightPerAxle","tunnelCategory","Settings","_this$props","controlindex","_this$props2","updateSettings","_ref","_this$props3","_ref2","_this$props4","_this","_this$props5","rangeSettings","start","onChange","intervalSettings","color","Button","Group","basic","keys","key","active","onClick","handleClickMode","Divider","build","discrete","inverted","Input","placeholder","handleRangeValueChange","bind","handleIntervalValueChange","SearchControl","possibleConstructorReturn","getPrototypeOf","call","handleClick","titleProps","newIndex","activeIndex","setState","handleSearchChange","event","fetchGeocodeResults","handleResultSelect","handleFetchIsochrones","handleZoom","dataChanged","assertThisInitialized","isochronesTitle","debounce","userTextInput","text","data","_this2","Segment","Container","textAlign","react_edit_inline2_default","validate","customValidateText","activeClassName","paramName","change","minWidth","display","margin","padding","fontWeight","fontSize","outline","border","Popup","trigger","float","content","fitted","Search","onSearchChange","onResultSelect","fluid","input","loading","circular","disabled","isResultSelected","Accordion","Title","Content","Controls_Settings","segmentStyle","zIndex","top","left","maxHeight","Controls","handleAddIsochronesControl","handleSettings","flex","minHeight","overflow","object","Controls_SearchControl","App","src_Map_Map","src_Controls_Controls","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","apply","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce7d911d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const hereConfig = {\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA'\n}\n","export default class SettingsObject {\n  constructor() {\n    this.userInput = ''\n    this.geocodeResults = []\n    this.isFetching = false\n    this.isFetchingIsochrones = false\n    this.settings = {\n      range: {\n        min: 1,\n        max: 600,\n        step: 1,\n        value: 60\n      },\n      interval: {\n        min: 1,\n        max: 60,\n        step: 1,\n        value: 10\n      },\n      mode: 'car'\n    }\n  }\n}\n","import { hereConfig } from '../hereConfig'\nimport SettingsObject from '../Controls/SettingsObject'\n\nexport const REQUEST_GEOCODE_RESULTS = 'REQUEST_GEOCODE_RESULTS'\nexport const REQUEST_ISOCHRONES_RESULTS = 'REQUEST_ISOCHRONES_RESULTS'\nexport const RECEIVE_GEOCODE_RESULTS = 'RECEIVE_GEOCODE_RESULTS'\nexport const RECEIVE_REVERSE_GEOCODE_RESULTS = 'RECEIVE_REVERSE_GEOCODE_RESULTS'\nexport const SET_USERTEXTINPUT = 'SET_USERTEXTINPUT'\nexport const ADD_ISOCHRONESCONTROL = 'ADD_ISOCHRONESCONTROL'\nexport const UPDATE_TEXTINPUT = 'UPDATE_TEXTINPUT'\nexport const UPDATE_SELECTED_ADDRESS = 'UPDATE_SELECTED_ADDRESS'\nexport const REMOVE_ISOCHRONES_CONTROL = 'REMOVE_ISOCHRONES_CONTROL'\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS'\n\nconst parseResponse = (json, latLng) => {\n  if (json.Response && json.Response.View.length > 0) {\n    let processedResults = []\n\n    for (const address of json.Response.View[0].Result) {\n      if (address.Location && address.Location.LocationType === 'point') {\n        processedResults.push({\n          title: address.Location.Address.Label,\n          description: address.Location.Address.PostalCode,\n          displayposition: {\n            lat: latLng\n              ? latLng.lat\n              : address.Location.DisplayPosition.Latitude,\n            lng: latLng\n              ? latLng.lng\n              : address.Location.DisplayPosition.Longitude\n          },\n          selected: false\n        })\n      }\n    }\n    return processedResults\n  }\n\n  return []\n}\n\nexport const receiveGeocodeResults = (controlIndex, json) => ({\n  type: RECEIVE_GEOCODE_RESULTS,\n  controlIndex,\n  results: parseResponse(json),\n  receivedAt: Date.now(),\n  reverse: false\n})\n\nconst receiveReverseGeocodeResults = (\n  controlIndex,\n  json,\n  latLng,\n  preFetch = false\n) => ({\n  type: RECEIVE_REVERSE_GEOCODE_RESULTS,\n  controlIndex,\n  results: preFetch\n    ? [\n        {\n          title: [json.lat, json.lng].join(','),\n          description: '',\n          DisplayPosition: {\n            lat: json.lat,\n            lng: json.lng\n          },\n          selected: true\n        }\n      ]\n    : parseResponse(json, latLng),\n  receivedAt: Date.now(),\n  reverse: true\n})\n\nconst setReverseGeocodeResult = (controlIndex, action) => dispatch => {\n  dispatch(\n    updateTextInput({\n      controlIndex: controlIndex,\n      inputValue: action.results[0].title\n    })\n  )\n\n  dispatch(\n    updateSelectedAddress({\n      controlIndex: controlIndex,\n      inputValue: action.results[0].title\n    })\n  )\n}\n\nexport const fetchHereGeocode = payload => dispatch => {\n  dispatch(requestGeocodeResults(payload.controlIndex))\n\n  let url = new URL('https://geocoder.api.here.com/6.2/geocode.json'),\n    params = {\n      app_id: hereConfig.appId,\n      app_code: hereConfig.appCode,\n      searchtext: payload.inputValue\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(json => dispatch(receiveGeocodeResults(payload.controlIndex, json)))\n}\n\nexport const fetchHereIsochrones = payload => dispatch => {\n\n    console.log(true, payload)\n    dispatch(requestIsochronesResults(payload.controlIndex))\n\n}\n\nexport const fetchHereReverseGeocode = payload => dispatch => {\n  // fake response\n  dispatch(\n    receiveReverseGeocodeResults(\n      payload.isoIndex,\n      { lat: payload.lat, lng: payload.lng },\n      true\n    )\n  )\n\n  dispatch(requestGeocodeResults(payload.isoIndex))\n\n  const radius = 250\n\n  let url = new URL(\n      'https://reverse.geocoder.api.here.com/6.2/reversegeocode.json'\n    ),\n    params = {\n      app_id: hereConfig.appId,\n      app_code: hereConfig.appCode,\n      mode: 'retrieveAddresses',\n      maxresults: 1,\n      prox: [payload.lat, payload.lng, radius].join(',')\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(response => response.json())\n    .then(json =>\n      dispatch(\n        receiveReverseGeocodeResults(payload.isoIndex, json, {\n          lat: payload.lat,\n          lng: payload.lng\n        })\n      )\n    )\n    .then(action => dispatch(setReverseGeocodeResult(payload.isoIndex, action)))\n}\n\nexport const requestIsochronesResults = controlIndex => ({\n  type: REQUEST_ISOCHRONES_RESULTS,\n  controlIndex\n})\n\nexport const requestGeocodeResults = controlIndex => ({\n  type: REQUEST_GEOCODE_RESULTS,\n  controlIndex\n})\n\nexport const addIsochronesControl = () => ({\n  type: ADD_ISOCHRONESCONTROL,\n  payload: new SettingsObject()\n})\n\nexport const removeIsochronesControl = controlIndex => ({\n  type: REMOVE_ISOCHRONES_CONTROL,\n  payload: controlIndex\n})\n\nexport const updateTextInput = textInputIndex => ({\n  type: UPDATE_TEXTINPUT,\n  payload: textInputIndex\n})\n\nexport const updateSelectedAddress = textInputIndex => ({\n  type: UPDATE_SELECTED_ADDRESS,\n  payload: textInputIndex\n})\n\nexport const updateSettings = payload => ({\n  type: UPDATE_SETTINGS,\n  payload: payload\n})\n","import { combineReducers } from 'redux'\nimport {\n  REQUEST_GEOCODE_RESULTS,\n  REQUEST_ISOCHRONES_RESULTS,\n  RECEIVE_GEOCODE_RESULTS,\n  RECEIVE_REVERSE_GEOCODE_RESULTS,\n  ADD_ISOCHRONESCONTROL,\n  REMOVE_ISOCHRONES_CONTROL,\n  UPDATE_TEXTINPUT,\n  UPDATE_SELECTED_ADDRESS,\n  UPDATE_SETTINGS\n} from '../actions/actions'\n\nimport SettingsObject from '../Controls/SettingsObject'\n\nconst initialIsochronesControlsState = {\n  controls: [new SettingsObject()]\n}\n\nconst isochronesControls = (state = initialIsochronesControlsState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case ADD_ISOCHRONESCONTROL:\n      return {\n        ...state,\n        controls: [...state.controls, action.payload]\n      }\n    case REMOVE_ISOCHRONES_CONTROL:\n      return {\n        ...state,\n        controls: state.controls.filter(\n          (item, i) => i !== action.payload.controlIndex\n        )\n      }\n    case UPDATE_TEXTINPUT:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.payload.controlIndex\n            ? { ...control, userInput: action.payload.inputValue }\n            : control\n        )\n      }\n    case REQUEST_ISOCHRONES_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? { ...control, isFetchingIsochrones: true }\n            : control\n        )\n      }\n    case REQUEST_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex ? { ...control, isFetching: true } : control\n        )\n      }\n    case RECEIVE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetching: false,\n                geocodeResults: action.results,\n                reverse: action.reverse\n              }\n            : control\n        )\n      }\n    case RECEIVE_REVERSE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetching: false,\n                geocodeResults: action.results,\n                reverse: action.reverse\n              }\n            : control\n        )\n      }\n    case UPDATE_SELECTED_ADDRESS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.payload.controlIndex\n            ? {\n                ...control,\n                geocodeResults: control.geocodeResults.map(result =>\n                  result.title === action.payload.inputValue\n                    ? { ...result, selected: true }\n                    : { ...result, selected: false }\n                )\n              }\n            : control\n        )\n      }\n    case UPDATE_SETTINGS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                settings: action.payload.settings\n              }\n            : control\n        )\n      }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  isochronesControls\n})\n\nexport default rootReducer\n","import * as L from 'leaflet'\n\nvar ExtraMarkers = {}\n\nExtraMarkers.Icon = L.Icon.extend({\n  options: {\n    iconSize: [35, 45],\n    iconAnchor: [17, 42],\n    popupAnchor: [1, -32],\n    shadowAnchor: [10, 12],\n    shadowSize: [36, 16],\n    className: '',\n    prefix: '',\n    extraClasses: '',\n    shape: 'circle',\n    icon: '',\n    innerHTML: '',\n    markerColor: 'red',\n    svgBorderColor: '#fff',\n    svgOpacity: 1,\n    iconColor: '#fff',\n    number: '',\n    svg: false\n  },\n  initialize: function(options) {\n    options = L.Util.setOptions(this, options)\n  },\n  createIcon: function() {\n    var div = document.createElement('div'),\n      options = this.options\n    if (options.icon) {\n      div.innerHTML = this._createInner()\n    }\n    if (options.innerHTML) {\n      div.innerHTML = options.innerHTML\n    }\n    if (options.bgPos) {\n      div.style.backgroundPosition =\n        -options.bgPos.x + 'px ' + -options.bgPos.y + 'px'\n    }\n    if (!options.svg) {\n      this._setIconStyles(div, options.shape + '-' + options.markerColor)\n    } else {\n      this._setIconStyles(div, 'svg')\n    }\n    return div\n  },\n  _createInner: function() {\n    var iconColorStyle = '',\n      iconNumber = '',\n      options = this.options\n    if (options.iconColor) {\n      iconColorStyle = \"style='color: \" + options.iconColor + \"' \"\n    }\n    if (options.number) {\n      iconNumber = \"number='\" + options.number + \"' \"\n    }\n    if (options.svg) {\n      var svg =\n        '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.529271 95.44922\" style=\"fill:' +\n        options.markerColor +\n        ';stroke:' +\n        options.svgBorderColor +\n        ';fill-opacity:' +\n        options.svgOpacity +\n        ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-139.52 -173.21)\"><path d=\"m174.28 173.21c-19.199 0.00035-34.764 15.355-34.764 34.297 0.007 6.7035 1.5591 12.813 5.7461 18.854l0.0234 0.0371 28.979 42.262 28.754-42.107c3.1982-5.8558 5.9163-11.544 6.0275-19.045-0.0001-18.942-15.565-34.298-34.766-34.297z\"/></g></svg>'\n      if (options.shape === 'square') {\n        svg =\n          '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.457038 96.523441\" style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-545.27 -658.39)\"><path d=\"m545.27 658.39v65.301h22.248l12.48 31.223 12.676-31.223h22.053v-65.301h-69.457z\"/></g></svg>'\n      }\n      if (options.shape === 'star') {\n        svg =\n          '<svg style=\"top:0; fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" viewBox=\"0 0 77.690999 101.4702\"><g transform=\"translate(-101.15 -162.97)\"><g transform=\"matrix(1 0 0 1.0165 -65.712 -150.28)\"><path d=\"m205.97 308.16-11.561 11.561h-16.346v16.346l-11.197 11.197 11.197 11.197v15.83h15.744l11.615 33.693 11.467-33.568 0.125-0.125h16.346v-16.346l11.197-11.197-11.197-11.197v-15.83h-15.83l-11.561-11.561z\"/></g></g></svg>'\n      }\n      if (options.shape === 'penta') {\n        svg =\n          '<svg style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\"   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 71.550368 96.362438\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-367.08 -289.9)\"><path d=\"m367.08 322.5 17.236-32.604h36.151l18.164 32.25-35.665 64.112z\"/></g></svg>'\n      }\n      return (\n        svg +\n        '<i ' +\n        iconNumber +\n        iconColorStyle +\n        \"class='\" +\n        options.extraClasses +\n        ' ' +\n        options.prefix +\n        ' ' +\n        options.icon +\n        \"'></i>\"\n      )\n    }\n    return (\n      '<i ' +\n      iconNumber +\n      iconColorStyle +\n      \"class='\" +\n      options.extraClasses +\n      ' ' +\n      options.prefix +\n      ' ' +\n      options.icon +\n      \"'></i>\"\n    )\n  },\n  _setIconStyles: function(img, name) {\n    var options = this.options,\n      size = L.point(options[name === 'shadow' ? 'shadowSize' : 'iconSize']),\n      anchor,\n      leafletName\n    if (name === 'shadow') {\n      anchor = L.point(options.shadowAnchor || options.iconAnchor)\n      leafletName = 'shadow'\n    } else {\n      anchor = L.point(options.iconAnchor)\n      leafletName = 'icon'\n    }\n    if (!anchor && size) {\n      anchor = size.divideBy(2, true)\n    }\n\n    img.className =\n      'leaflet-marker-' +\n      leafletName +\n      ' extra-marker extra-marker-' +\n      name +\n      ' ' +\n      options.className\n    if (anchor) {\n      img.style.marginLeft = -anchor.x + 'px'\n      img.style.marginTop = -anchor.y + 'px'\n    }\n    if (size) {\n      img.style.width = size.x + 'px'\n      img.style.height = size.y + 'px'\n    }\n  },\n  createShadow: function() {\n    var div = document.createElement('div')\n    this._setIconStyles(div, 'shadow')\n    return div\n  }\n})\n\nExtraMarkers.icon = function(options) {\n  return new ExtraMarkers.Icon(options)\n}\n\nexport default ExtraMarkers\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport L from 'leaflet'\nimport ExtraMarkers from './extraMarkers'\nimport { fetchHereReverseGeocode } from '../actions/actions'\n\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\nconst CartoDB_VoyagerLabelsUnder = L.tileLayer(\n  'https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png',\n  {\n    attribution:\n      '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n    subdomains: 'abcd',\n    maxZoom: 19\n  }\n)\n\nconst markersLayer = L.layerGroup()\n\nconst mapParams = {\n  center: [40.655769, -73.938503],\n  zoomControl: false,\n  zoom: 13,\n  layers: [markersLayer, CartoDB_VoyagerLabelsUnder]\n}\n\nclass Map extends React.Component {\n  componentDidMount() {\n    this.map = L.map('map', mapParams)\n\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n    const brand = L.control({\n      position: 'bottomright'\n    })\n    brand.onAdd = function(map) {\n      var div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://gis.ops.com\" target=\"_blank\"><div class=\"gis-ops-logo\"></div></a>'\n      return div\n    }\n    this.map.addControl(brand)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isochronesMarkers } = this.props\n\n    let cnt = 0\n\n    for (let isochrones of isochronesMarkers) {\n      // add marker\n      if (isochrones.geocodeResults.length > 0) {\n        for (let location of isochrones.geocodeResults) {\n          if (location.selected) {\n            // if a address is geocoded normally, clear layer beforehand\n\n            if (!isochrones.reverse) this.clearLayerByIndex(cnt)\n\n            if (this.isMarkerPresent(cnt)) {\n              this.addIsochronesMarker(location, cnt, true)\n            } else {\n              this.addIsochronesMarker(location, cnt)\n            }\n          }\n        }\n      }\n\n      cnt += 1\n    }\n  }\n\n  clearLayerByIndex(idx) {\n    markersLayer.eachLayer(function(layer) {\n      if (layer.options.index === idx) markersLayer.removeLayer(layer)\n    })\n  }\n\n  isMarkerPresent(idx) {\n    let isPresent = false\n    markersLayer.eachLayer(function(layer) {\n      if (layer.options.index === idx) isPresent = true\n    })\n    return isPresent\n  }\n\n  updatePosition(obj) {\n    this.props.dispatch(\n      fetchHereReverseGeocode({\n        isoIndex: obj.isoIndex,\n        ...obj.latLng\n      })\n    )\n  }\n  addIsochronesMarker(location, idx, isPresent = false) {\n    if (!isPresent) {\n      const isochronesMarker = ExtraMarkers.icon({\n        icon: 'fa-number',\n        markerColor: 'purple',\n        shape: 'star',\n        prefix: 'fa',\n        number: (idx + 1).toString()\n      })\n\n      const that = this\n\n      L.marker(location.displayposition, {\n        icon: isochronesMarker,\n        draggable: true,\n        index: idx\n      })\n        .addTo(markersLayer)\n        .bindTooltip(location.title + ', ' + location.description, {\n          permanent: false\n        })\n        .on('dragend', function(e) {\n          that.updatePosition({\n            latLng: e.target.getLatLng(),\n            isoIndex: e.target.options.index\n          })\n        })\n    } else {\n      markersLayer.eachLayer(function(layer) {\n        if (layer.options.index === idx) {\n          layer.setTooltipContent(location.title + ', ' + location.description)\n        }\n      })\n    }\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state, ownProps)\n  const isochronesMarkers = state.isochronesControls.controls\n  return {\n    isochronesMarkers\n  }\n}\n\nexport default connect(mapStateToProps)(Map)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Slider } from 'react-semantic-ui-range'\nimport { Label, Input, Button, Divider } from 'semantic-ui-react'\nimport { updateSettings } from '../actions/actions'\n\nconst transportModes = {\n  pedestrian: {\n    name: 'pedestrian',\n    type: ['fastest', 'shortest'],\n    traffic: ['enabled', 'disabled']\n  },\n  car: {\n    name: 'car',\n    type: ['fastest', 'shortest', 'traffic'],\n    traffic: ['enabled', 'disabled'],\n    consumptionModel: ['default', 'standard'],\n    customConsumptionDetails: {}\n  },\n  truck: {\n    name: 'truck',\n    type: ['fastest'],\n    shippedHazardousGoods: [],\n    limitedWeight: {},\n    weightPerAxle: {},\n    height: {},\n    width: {},\n    length: {},\n    tunnelCategory: [],\n    consumptionModel: ['default', 'standard'],\n    customConsumptionDetails: {}\n  }\n}\n\nclass Settings extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  static propTypes = {\n    userTextInput: PropTypes.string,\n    results: PropTypes.array,\n    isFetching: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    controlindex: PropTypes.number.isRequired\n  }\n\n  updateSettings() {\n    const { controls, controlindex, dispatch } = this.props\n\n    dispatch(\n      updateSettings({\n        controlIndex: controlindex,\n        settings: controls[controlindex].settings\n      })\n    )\n  }\n\n  handleClickMode(mode) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.mode = mode\n\n    this.updateSettings()\n  }\n\n  handleRangeValueChange(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.range.value = value\n\n    this.updateSettings()\n  }\n\n  handleIntervalValueChange(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.interval.value = value\n\n    this.updateSettings()\n  }\n\n  render() {\n    const { controls, controlindex } = this.props\n\n    const rangeSettings = {\n      settings: {\n        ...controls[controlindex].settings.range,\n        start: controls[controlindex].settings.range.value,\n        onChange: value => {\n          controls[controlindex].settings.range.value = value\n\n          if (\n            controls[controlindex].settings.range.value <\n            controls[controlindex].settings.interval.value\n          ) {\n            controls[controlindex].settings.interval.value =\n              controls[controlindex].settings.range.value\n          }\n\n          controls[controlindex].settings.interval.max =\n            controls[controlindex].settings.range.value\n\n          this.updateSettings()\n        }\n      }\n    }\n\n    const intervalSettings = {\n      settings: {\n        ...controls[controlindex].settings.interval,\n        start: controls[controlindex].settings.interval.value,\n        onChange: value => {\n          controls[controlindex].settings.interval.value = value\n\n          this.updateSettings()\n        }\n      }\n    }\n\n    return (\n      <div>\n        <div className=\"mb3\">\n          <Label size=\"small\" color=\"purple\">\n            {'Mode'}\n          </Label>\n          <div className=\"mt3\">\n            <Button.Group basic size=\"small\">\n              {transportModes &&\n                Object.keys(transportModes).map((key, i) => (\n                  <Button\n                    active={key === controls[controlindex].settings.mode}\n                    key={i}\n                    mode={key}\n                    onClick={() => this.handleClickMode(key)}>\n                    {transportModes[key].name}\n                  </Button>\n                ))}\n            </Button.Group>\n          </div>\n        </div>\n        <Divider />\n\n        <div className=\"mb3\">\n          <Label size=\"small\" color=\"purple\">\n            {'Range Type'}\n          </Label>\n          <div className=\"mt3\">\n            <Button.Group basic size=\"small\">\n              <Button>Distance</Button>\n              <Button>Time</Button>\n            </Button.Group>\n          </div>\n        </div>\n        <Divider />\n        \n        <div>\n          <Label size=\"small\" color=\"purple\">\n            {'Range'}\n          </Label>\n          <div className=\"mt3\">\n            <Slider\n              discrete\n              color=\"grey\"\n              value={controls[controlindex].settings.range.value}\n              inverted={false}\n              settings={rangeSettings.settings}\n            />\n            <div className=\"mt2 flex justify-between items-center\">\n              <Input\n                size=\"mini\"\n                placeholder=\"Enter Value\"\n                onChange={this.handleRangeValueChange.bind(this)}\n              />\n              <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                {controls[controlindex].settings.range.value + ' minutes'}\n              </Label>\n            </div>\n          </div>\n        </div>\n        <Divider />\n        <div>\n          <Label size=\"small\" color=\"purple\">\n            {'Interval'}\n          </Label>\n          <div className=\"mt3\">\n            <Slider\n              discrete\n              color=\"grey\"\n              value={controls[controlindex].settings.interval.value}\n              inverted={false}\n              settings={intervalSettings.settings}\n            />\n            <div className=\"mt2 flex justify-between items-center\">\n              <Input\n                size=\"mini\"\n                placeholder=\"Enter Value\"\n                onChange={this.handleIntervalValueChange.bind(this)}\n              />\n              <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                {controls[controlindex].settings.interval.value + ' minutes'}\n              </Label>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { controls } = state.isochronesControls\n  return {\n    controls\n  }\n}\n\nexport default connect(mapStateToProps)(Settings)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Settings from './Settings'\nimport {\n  Segment,\n  Search,\n  Icon,\n  Container,\n  Popup,\n  Accordion,\n  Divider,\n  Button\n} from 'semantic-ui-react'\nimport {\n  updateTextInput,\n  fetchHereGeocode,\n  updateSelectedAddress,\n  removeIsochronesControl,\n  fetchHereIsochrones\n} from '../actions/actions'\nimport InlineEdit from 'react-edit-inline2'\nimport { debounce } from 'throttle-debounce'\n\nclass SearchControl extends React.Component {\n  static propTypes = {\n    userTextInput: PropTypes.string.isRequired,\n    results: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    isFetchingIsochrones: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    controlindex: PropTypes.number.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.dataChanged = this.dataChanged.bind(this)\n\n    this.state = {\n      isochronesTitle: 'Isochrones -' + (props.controlindex + 1),\n      activeIndex: 0\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleResultSelect = this.handleResultSelect.bind(this)\n    this.fetchGeocodeResults = debounce(1000, this.fetchGeocodeResults)\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  fetchGeocodeResults() {\n    const { dispatch, userTextInput } = this.props\n\n    console.log(userTextInput)\n    dispatch(\n      fetchHereGeocode({\n        inputValue: userTextInput,\n        controlIndex: this.props.controlindex\n      })\n    )\n  }\n\n  handleSearchChange = event => {\n    this.props.dispatch(\n      updateTextInput({\n        inputValue: event.target.value,\n        controlIndex: this.props.controlindex\n      })\n    )\n    this.fetchGeocodeResults()\n  }\n\n  // handleSelectionChange = event => {\n  //   console.log(event.target.value);\n  // };\n\n  handleResultSelect = (e, { result }) => {\n    this.props.dispatch(\n      updateTextInput({\n        inputValue: result.title,\n        controlIndex: this.props.controlindex\n      })\n    )\n\n    this.props.dispatch(\n      updateSelectedAddress({\n        inputValue: result.title,\n        controlIndex: this.props.controlindex\n      })\n    )\n  }\n\n  customValidateText(text) {\n    return text.length > 0 && text.length < 64\n  }\n\n  dataChanged(data) {\n    this.setState({ ...data })\n  }\n\n  handleFetchIsochrones = () => {\n\n    console.log('fetching...')\n    this.props.dispatch(\n      fetchHereIsochrones({ controlIndex: this.props.controlindex })\n    )\n  }\n\n  handleZoom = controlIndex => {\n    console.log('zoom')\n  }\n\n  render() {\n    const {\n      isFetching,\n      isFetchingIsochrones,\n      userTextInput,\n      results,\n      controls,\n      controlindex\n    } = this.props\n\n    const handleRemoveControl = () => {\n      if (controls.length > 1) {\n        this.props.dispatch(\n          removeIsochronesControl({ controlIndex: controlindex })\n        )\n      }\n    }\n\n    const isResultSelected = () => {\n      for (let result of results) {\n        if (result.selected) return false\n      }\n\n      return true\n    }\n    return (\n      <Segment>\n        <Container className=\"mb2\" textAlign=\"left\">\n          <InlineEdit\n            validate={this.customValidateText}\n            activeClassName=\"editing\"\n            text={this.state.isochronesTitle}\n            paramName=\"isochronesTitle\"\n            change={this.dataChanged}\n            style={{\n              minWidth: 200,\n              display: 'inline-block',\n              margin: '0 0 0 0',\n              padding: 0,\n              fontWeight: 'bold',\n              fontSize: 15,\n              outline: 'none',\n              border: 'none'\n            }}\n          />\n\n          <Popup\n            trigger={\n              <Icon\n                name=\"remove\"\n                style={{ float: 'right' }}\n                onClick={handleRemoveControl}\n              />\n            }\n            content=\"Remove\"\n            size=\"mini\"\n          />\n          <Popup\n            trigger={\n              <Icon\n                name=\"expand arrows alternate\"\n                style={{ float: 'right' }}\n                onClick={this.handleZoom}\n              />\n            }\n            content=\"Zoom\"\n            size=\"mini\"\n          />\n        </Container>\n        <Divider fitted />\n        <div className=\"flex justify-between items-center mt3\">\n          <Search\n            onSearchChange={this.handleSearchChange}\n            onResultSelect={this.handleResultSelect}\n            type=\"text\"\n            fluid\n            input={{ fluid: true }}\n            loading={isFetching}\n            className=\"flex-grow-1 mr2\"\n            results={results}\n            value={userTextInput}\n            placeholder=\"Find Address ...\"\n          />\n          <Popup\n            trigger={\n              <Button\n                circular\n                loading={isFetchingIsochrones}\n                disabled={isResultSelected()}\n                color=\"purple\"\n                icon=\"globe\"\n                onClick={this.handleFetchIsochrones}\n              />\n            }\n            content=\"Compute isochrones\"\n            size=\"mini\"\n          />\n        </div>\n        <Container className=\"mt2\">\n          <Accordion>\n            <Accordion.Title\n              active={this.state.activeIndex === 0}\n              index={0}\n              onClick={this.handleClick}>\n              <Icon name=\"dropdown\" />\n              Settings\n            </Accordion.Title>\n            <Accordion.Content active={this.state.activeIndex === 0}>\n              <Settings controlindex={controlindex} />\n            </Accordion.Content>\n          </Accordion>\n        </Container>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userTextInput =\n    state.isochronesControls.controls[ownProps.controlindex].userInput\n  const results =\n    state.isochronesControls.controls[ownProps.controlindex].geocodeResults\n  const isFetching =\n    state.isochronesControls.controls[ownProps.controlindex].isFetching\n  const isFetchingIsochrones =\n    state.isochronesControls.controls[ownProps.controlindex]\n      .isFetchingIsochrones\n  const controls = state.isochronesControls.controls\n\n  return {\n    userTextInput,\n    results,\n    isFetching,\n    isFetchingIsochrones,\n    controls\n  }\n}\n\nexport default connect(mapStateToProps)(SearchControl)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Segment, Button, Popup, Icon } from 'semantic-ui-react'\nimport SearchControl from './SearchControl'\nimport { addIsochronesControl } from '../actions/actions'\n\nconst segmentStyle = {\n  zIndex: 999,\n  position: 'absolute',\n  width: '400px',\n  top: '0',\n  left: '10px',\n  maxHeight: 'calc(100vh - 2vw)'\n}\n\nclass Controls extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleAddIsochronesControl = this.handleAddIsochronesControl.bind(this)\n  }\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired\n  }\n\n  handleAddIsochronesControl = () => {\n    this.props.dispatch(addIsochronesControl())\n  }\n\n  handleSettings = () => {\n    console.log('open settings')\n  }\n\n  render() {\n    const { controls } = this.props\n    return (\n      <Segment className=\"flex flex-column\" style={segmentStyle}>\n        <div\n          style={{ height: '50px' }}\n          className=\"flex justify-between items-center\">\n          <span className=\"b f4\">HERE Isolines App</span>\n          <Popup\n            trigger={\n              <Icon\n                name=\"setting\"\n                size=\"large\"\n                color=\"grey\"\n                onClick={this.handleSettings}\n              />\n            }\n            content=\"Settings\"\n            size=\"mini\"\n          />\n        </div>\n        <div>\n          <div style={{ flex: 1, display: 'flex', minHeight: '0px' }}>\n            <div style={{ flex: 1, overflow: 'auto' }}>\n              <div\n                style={{ maxHeight: 'calc(100vh - 10vw)', overflow: 'auto' }}>\n                {controls &&\n                  controls.map((object, i) => (\n                    <SearchControl key={i} controlindex={i} />\n                  ))}\n                <Popup\n                  trigger={\n                    <Button\n                      circular\n                      icon=\"plus\"\n                      onClick={this.handleAddIsochronesControl}\n                    />\n                  }\n                  content=\"Add\"\n                  size=\"mini\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { controls } = state.isochronesControls\n  return {\n    controls\n  }\n}\n\nexport default connect(mapStateToProps)(Controls)\n","import React from 'react'\nimport Map from './Map/Map'\nimport Controls from './Controls/Controls'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Map />\n        <Controls className={'isoControls'} />\n      </div>\n    )\n  }\n}\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}