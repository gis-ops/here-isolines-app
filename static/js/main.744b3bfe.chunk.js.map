{"version":3,"sources":["serviceWorker.js","Controls/SettingsObject.jsx","actions/map.js","actions/actions.js","reducers/map.js","reducers/resulthandler.js","actions/hereconfig.js","reducers/hereconfig.js","reducers/index.js","Map/extraMarkers.js","Map/hereTileLayer.js","Map/Map.jsx","Controls/Settings.jsx","Controls/SearchControl.jsx","Controls/Controls.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","SettingsObject","Object","classCallCheck","this","userInput","geocodeResults","isochrones","receivedAt","results","isochronesHidden","isFetching","isFetchingIsochrones","settings","range","min","max","step","value","interval","mode","rangetype","direction","traffic","timeEnabled","hgv","height","weight","width","length","weightPerAxle","trailersCount","shippedHazardousGoods","tunnelCategory","zoomToIsochrones","controlIndex","type","Date","now","toggleIsochrones","zoomToPoint","latLng","downloadIsochrones","catchErrorGeocodeXMLResponse","err","dispatch","responseDoc","DOMParser","parseFromString","getElementsByTagName","getAttribute","resultHandler","handlerCode","handlerMessage","innerHTML","receiveGeocodeResults","processGeocodeResponse","json","arguments","undefined","reverse","Response","View","processedResults","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Result","Symbol","iterator","next","done","address","Location","LocationType","push","title","Address","Label","description","PostalCode","displayposition","lat","DisplayPosition","Latitude","lng","Longitude","selected","return","parseGeocodeResponse","setReverseGeocodeResult","receiveIsochronesResults","updateTextInput","inputValue","updateSelectedAddress","handleResponse","response","contentType","headers","get","includes","handleJSONResponse","handleXMLResponse","Error","concat","then","ok","Promise","reject","assign","status","statusText","text","fetchHereIsochrones","payload","requestIsochronesResults","isolineParameters","center","start","timeVal","destination","enableHgvSettings","join","ranges","rangeInSeconds","intervalInSeconds","rangeInMeters","intervalInMeters","processIsolineSettings","url","URL","params","objectSpread","app_id","hereConfig","appId","app_code","appCode","search","URLSearchParams","fetch","data","isoline","parseIsochronesResponse","catch","error","console","log","subtype","details","requestGeocodeResults","addIsochronesControl","textInputIndex","initialState","event","controlIdx","mapEvents","state","action","NO_GEOCODE_RESULTS","NO_ISOCHRONES_RESULTS","handlerTopic","INVALID_CREDENTIALS","setAppId","setAppCode","initialIsochronesControlsState","controls","rootReducer","combineReducers","isochronesControls","toConsumableArray","filter","item","i","map","control","result","ExtraMarkers","Icon","L","extend","options","iconSize","iconAnchor","popupAnchor","shadowAnchor","shadowSize","className","prefix","extraClasses","shape","icon","markerColor","svgBorderColor","svgOpacity","iconColor","number","svg","initialize","setOptions","createIcon","div","document","createElement","_createInner","bgPos","style","backgroundPosition","x","y","_setIconStyles","iconColorStyle","iconNumber","img","name","anchor","leafletName","size","divideBy","marginLeft","marginTop","createShadow","HereTileLayer","HERE","subdomains","minZoom","maxZoom","scheme","resource","mapId","format","schemeStart","split","tileResolution","retina","tileServer","indexOf","tileUrl","_attributionUrl","template","prototype","call","_attributionText","onAdd","_attributionBBoxes","_fetchAttributionBBoxes","onRemove","_map","attributionControl","removeAttribution","off","_findCopyrightBBox","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","_parseAttributionBBoxes","JSON","parse","responseText","open","send","providers","normal","boxes","j","box","on","_attributionProviders","visibleProviders","zoom","getZoom","visibleBounds","getBounds","minLevel","maxLevel","overlaps","attributions","provider","alt","label","attributionText","addAttribution","here","opts","hereReducedDay","hereHybridGreyDay","markersLayer","layerGroup","isochronesLayer","southWest","northEast","mapParams","zoomControl","maxBounds","latLngBounds","layers","Map","createPane","opacity","baseMaps","HERE reduced.day","HERE hybrid.grey.day","addTo","position","brand","DomUtil","create","hereLogo","addControl","props","cnt","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","clearLayerByIndex","addIsochronesMarker","isMarkerPresent","isochrone","travelIcon","rangeTypeIcon","prevProps","clearLayers","isochroneResultsReversed","scaleHsl","chroma","scale","colors","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","component","isochroneComponent","addIsochrones","getTooltipContent","features","geojson","toGeoJSON","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","properties","attribution","blob","Blob","stringify","saveAs","eventFeatures","featureGroup","eachLayer","layer","index","addLayer","fitBounds","paddingTopLeft","flyTo","saveGeojson","prevState","updateMarkers","updateIsochrones","updateMap","idx","removeLayer","isPresent","obj","_this$props","isoIndex","maxresults","prox","geometry","tooltipContent","color","polygon","coordString","fillColor","pane","bindTooltip","permanent","sticky","getTooltip","setTooltipContent","openTooltip","unbindTooltip","isochronesMarker","toString","that","marker","draggable","e","updatePosition","target","getLatLng","react_default","a","id","React","Component","connect","ownProps","transportModes","pedestrian","car","consumptionModel","customConsumptionDetails","truck","limitedWeight","rangeTypes","distance","time","Settings","_this","possibleConstructorReturn","getPrototypeOf","handleDismiss","setState","apiMessageVisible","handleClickAccordion","titleProps","newIndex","activeIndex","controlindex","_this$props2","updateSettings","_this$props3","_this$props4","_this$props5","_this$props6","_ref","_this$props7","indexOfVal","splice","_ref2","_this$props8","currentTunnelCat","_this$props9","_this$props10","_this$props11","_this$props12","_this$props13","_ref3","_this$props14","alignRangeInterval","_ref4","_this$props15","_this2","_this$props16","rangeSettings","onChange","intervalSettings","CheckBoxHazardous","_ref5","esm_extends","Checkbox","handleHazardousGoods","bind","checked","RadioTunnelCategory","_ref6","Radio","handleTunnelCategory","Message","info","onDismiss","href","Accordion","Title","active","onClick","Content","Button","Group","basic","keys","key","handleClickMode","Divider","handleClickDirection","handleClickTraffic","slider","handleEnableTime","disabled","Form","Input","actionPosition","moment","fluid","react_semantic_ui_min_default","handleClickTimeValue","toISOString","handleEnableHgvSettings","build","discrete","inverted","handleHgvSetting","clearTunnelCategory","handleRangetype","placeholder","handleRangeValueChange","handleIntervalValueChange","SearchControl","handleSearchChange","fetchGeocodeResults","handleResultSelect","handleFetchIsochrones","handleZoom","handleShow","handleDownload","dataChanged","assertThisInitialized","isochronesTitle","debounce","userTextInput","searchtext","isochronesResults","Segment","margin","Popup","trigger","content","react_edit_inline2_default","validate","customValidateText","activeClassName","paramName","change","minWidth","display","padding","fontWeight","fontSize","outline","border","circular","float","fitted","Search","onSearchChange","onResultSelect","input","loading","isResultSelected","Container","Controls_Settings","segmentStyle","zIndex","top","left","maxHeight","Controls","openSettings","settingsOpen","closeSettings","handleAddIsochronesControl","handleAppIdChange","handleAppCodeChange","flex","minHeight","overflow","object","Controls_SearchControl","marginBottom","boxShadow","rel","Modal","dimmer","onClose","close","Header","image","Image","wrapped","src","Description","labelPosition","Actions","App","toast","src_Map_Map","src_Controls_Controls","react_semantic_toasts_build","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","apply","render","es","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.744b3bfe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default class SettingsObject {\n  constructor() {\n    this.userInput = ''\n    this.geocodeResults = []\n    this.isochrones = {\n      receivedAt: null,\n      results: []\n    }\n    this.isochronesHidden = false\n    this.isFetching = false\n    this.isFetchingIsochrones = false\n    this.settings = {\n      range: {\n        min: 1,\n        max: 500,\n        step: 1,\n        value: 60\n      },\n      interval: {\n        min: 1,\n        max: 60,\n        step: 1,\n        value: 10\n      },\n      mode: 'car',\n      rangetype: 'distance',\n      direction: 'start',\n      traffic: 'disabled',\n      timeEnabled: false,\n      hgv: {\n        height: 5,\n        weight: 100,\n        width: 5,\n        length: 20,\n        weightPerAxle: 50,\n        trailersCount: 0,\n        shippedHazardousGoods: [],\n        tunnelCategory: ''\n      }\n    }\n  }\n}\n","export const ZOOM_TO_ISOCHRONES = 'ZOOM_TO_ISOCHRONES'\nexport const ZOOM_TO_POINT = 'ZOOM_TO_POINT'\nexport const TOGGLE_ISOCHRONES = 'TOGGLE_ISOCHRONES'\nexport const DOWNLOAD_ISOCHRONES = 'DOWNLOAD_ISOCHRONES'\n\nexport const zoomToIsochrones = controlIndex => ({\n  type: ZOOM_TO_ISOCHRONES,\n  receivedAt: Date.now(),\n  controlIndex\n})\n\nexport const toggleIsochrones = controlIndex => ({\n  type: TOGGLE_ISOCHRONES,\n  receivedAt: Date.now(),\n  controlIndex\n})\n\nexport const zoomToPoint = latLng => ({\n  type: ZOOM_TO_POINT,\n  receivedAt: Date.now(),\n  latLng\n})\n\nexport const downloadIsochrones = controlIndex => ({\n  type: DOWNLOAD_ISOCHRONES,\n  receivedAt: Date.now(),\n  controlIndex\n})\n","//import hereConfig from '../hereConfig'\nimport SettingsObject from '../Controls/SettingsObject'\nimport { zoomToIsochrones } from './map'\n\nexport const REQUEST_GEOCODE_RESULTS = 'REQUEST_GEOCODE_RESULTS'\nexport const REQUEST_ISOCHRONES_RESULTS = 'REQUEST_ISOCHRONES_RESULTS'\nexport const RECEIVE_GEOCODE_RESULTS = 'RECEIVE_GEOCODE_RESULTS'\nexport const RECEIVE_REVERSE_GEOCODE_RESULTS = 'RECEIVE_REVERSE_GEOCODE_RESULTS'\nexport const SET_USERTEXTINPUT = 'SET_USERTEXTINPUT'\nexport const ADD_ISOCHRONESCONTROL = 'ADD_ISOCHRONESCONTROL'\nexport const UPDATE_TEXTINPUT = 'UPDATE_TEXTINPUT'\nexport const UPDATE_SELECTED_ADDRESS = 'UPDATE_SELECTED_ADDRESS'\nexport const REMOVE_ISOCHRONES_CONTROL = 'REMOVE_ISOCHRONES_CONTROL'\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS'\nexport const RECEIVE_ISOCHRONES_RESULTS = 'RECEIVE_ISOCHRONES_RESULTS'\nexport const RESULT_HANDLER = 'RESULT_HANDLER'\nexport const HIDE_ISOCHRONES_INDEX = 'HIDE_ISOCHRONES_INDEX'\n\nconst parseGeocodeResponse = (json, latLng) => {\n  if (json.Response && json.Response.View.length > 0) {\n    let processedResults = []\n\n    for (const address of json.Response.View[0].Result) {\n      if (address.Location && address.Location.LocationType === 'point') {\n        processedResults.push({\n          title: address.Location.Address.Label,\n          description: address.Location.Address.PostalCode,\n          displayposition: {\n            lat: latLng\n              ? latLng.lat\n              : address.Location.DisplayPosition.Latitude,\n            lng: latLng\n              ? latLng.lng\n              : address.Location.DisplayPosition.Longitude\n          },\n          selected: false\n        })\n      }\n    }\n    return processedResults\n  }\n\n  // if not addresses are found return without coordinates\n  return [\n    {\n      title: '',\n      description: '',\n      displayposition: {\n        lat: latLng.lat,\n        lng: latLng.lng\n      },\n      selected: false\n    }\n  ]\n}\nconst catchErrorGeocodeXMLResponse = (err, controlIndex) => dispatch => {\n  const responseDoc = new DOMParser().parseFromString(err, 'application/xml')\n\n  const error = responseDoc.getElementsByTagName('ns2:Error')\n  const subtype = error[0].getAttribute('subtype')\n\n  if (subtype == 'InvalidCredentials') {\n    dispatch(\n      resultHandler({\n        handlerCode: 'INVALID_CREDENTIALS',\n        handlerMessage: responseDoc.getElementsByTagName('Details')[0].innerHTML\n      })\n    )\n  }\n\n  dispatch(receiveGeocodeResults(controlIndex, []))\n}\n\nconst catchErrorIsochronesJSONResponse = (err, controlIndex) => dispatch => {\n  console.log(err.response)\n  if (err.response.subtype == 'InvalidInputData') {\n    dispatch(\n      resultHandler({\n        handlerCode: 'INVALID_CREDENTIALS',\n        handlerMessage: err.response.details\n      })\n    )\n  }\n\n  dispatch(receiveIsochronesResults(controlIndex, []))\n}\n\nconst parseIsochronesResponse = json => {\n  if (json.response && json.response.isoline.length > 0) {\n    const isolinesReversed = json.response.isoline.reverse()\n    return isolinesReversed\n  }\n  return []\n}\n\nconst processIsochronesResponse = (json, controlIndex) => dispatch => {\n  const results = parseIsochronesResponse(json)\n\n  if (results.length == 0) {\n    dispatch(\n      resultHandler({\n        handlerCode: 'NO_ISOCHRONES_RESULTS'\n      })\n    )\n  }\n  dispatch(receiveIsochronesResults(controlIndex, results))\n  if (results.length > 0) dispatch(zoomToIsochrones(controlIndex))\n}\n\nconst processGeocodeResponse = (\n  json,\n  controlIndex,\n  latLng = false,\n  reverse = false\n) => dispatch => {\n  const results = parseGeocodeResponse(json, latLng)\n\n  // if no address can be found\n  if (results[0].title.length == 0) {\n    dispatch(\n      resultHandler({\n        handlerCode: 'NO_GEOCODE_RESULTS'\n      })\n    )\n  }\n  dispatch(receiveGeocodeResults(controlIndex, results, reverse))\n  if (reverse) dispatch(setReverseGeocodeResult(controlIndex, results))\n}\n\nexport const receiveGeocodeResults = (controlIndex, results, reverse) => ({\n  type: RECEIVE_GEOCODE_RESULTS,\n  controlIndex,\n  results: results,\n  receivedAt: Date.now(),\n  reverse: reverse\n})\n\nexport const receiveIsochronesResults = (controlIndex, results) => ({\n  type: RECEIVE_ISOCHRONES_RESULTS,\n  controlIndex,\n  results: results,\n  receivedAt: Date.now(),\n  reverse: false\n})\n\nexport const hideIsochronesIndex = controlIndex => ({\n  type: HIDE_ISOCHRONES_INDEX,\n  controlIndex\n})\n\nconst setReverseGeocodeResult = (controlIndex, results) => dispatch => {\n  if (results[0]) {\n    dispatch(\n      updateTextInput({\n        controlIndex: controlIndex,\n        inputValue: results[0] ? results[0].title : ''\n      })\n    )\n\n    dispatch(\n      updateSelectedAddress({\n        controlIndex: controlIndex,\n        inputValue: results[0] ? results[0].title : ''\n      })\n    )\n    //dispatch(zoomToPoint(action.results[0].displayposition))\n  }\n}\n\nconst processIsolineSettings = (settings, center) => {\n  let isolineParameters = {}\n\n  if (settings.direction == 'start') {\n    isolineParameters.start = center.lat + ',' + center.lng\n    if (settings.timeEnabled) {\n      if (settings.timeVal) isolineParameters['departure'] = settings.timeVal\n    }\n  } else if (settings.direction == 'destination') {\n    isolineParameters.destination = center.lat + ',' + center.lng\n    if (settings.timeEnabled) {\n      if (settings.timeVal) isolineParameters['arrival'] = settings.timeVal\n    }\n  }\n  isolineParameters.mode =\n    'fastest;' + settings.mode + ';' + 'traffic:' + settings.traffic + ';'\n  isolineParameters.rangetype = settings.rangetype\n\n  if (settings.mode == 'truck') {\n    if (settings.enableHgvSettings) {\n      isolineParameters = Object.assign(settings.hgv, isolineParameters)\n      isolineParameters.shippedHazardousGoods = settings.hgv.shippedHazardousGoods.join(\n        ','\n      )\n      isolineParameters.tunnelCategory = settings.hgv.tunnelCategory\n    }\n  }\n\n  // seconds\n  const ranges = []\n  if (settings.rangetype === 'time') {\n    let rangeInSeconds = settings.range.value * 60\n    const intervalInSeconds = settings.interval.value * 60\n\n    // 600/100\n    while (rangeInSeconds > 0) {\n      ranges.push(rangeInSeconds)\n      rangeInSeconds -= intervalInSeconds\n    }\n\n    isolineParameters.range = ranges.join(',')\n\n    // meters\n  } else if (settings.rangetype === 'distance') {\n    let rangeInMeters = settings.range.value * 1000\n    const intervalInMeters = settings.interval.value * 1000\n\n    // 600/100\n    while (rangeInMeters > 0) {\n      ranges.push(rangeInMeters)\n      rangeInMeters -= intervalInMeters\n    }\n\n    isolineParameters.range = ranges.join(',')\n  }\n  return isolineParameters\n}\n\nconst handleResponse = response => {\n  let contentType = response.headers.get('content-type')\n  if (contentType.includes('application/json')) {\n    return handleJSONResponse(response)\n  } else if (contentType.includes('application/xml;charset=utf-8')) {\n    return handleXMLResponse(response)\n  } else {\n    // Other response types as necessary. I haven't found a need for them yet though.\n    throw new Error(`Sorry, content-type ${contentType} not supported`)\n  }\n}\n\nconst handleJSONResponse = response => {\n  return response.json().then(json => {\n    if (response.ok) {\n      return json\n    } else {\n      return Promise.reject(\n        Object.assign({}, json, {\n          status: response.status,\n          statusText: response.statusText,\n          err: json\n        })\n      )\n    }\n  })\n}\nconst handleXMLResponse = response => {\n  return response.text().then(text => {\n    if (response.ok) {\n      return text\n    } else {\n      return Promise.reject({\n        status: response.status,\n        statusText: response.statusText,\n        err: text\n      })\n    }\n  })\n}\n\nexport const fetchHereGeocode = payload => dispatch => {\n  dispatch(requestGeocodeResults({ controlIndex: payload.controlIndex }))\n\n  let url = new URL('https://geocoder.api.here.com/6.2/geocode.json'),\n    params = {\n      app_id: payload.hereConfig.appId,\n      app_code: payload.hereConfig.appCode,\n      searchtext: payload.inputValue\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(handleResponse)\n    .then(data => dispatch(processGeocodeResponse(data, payload.controlIndex)))\n    .catch(error =>\n      dispatch(catchErrorGeocodeXMLResponse(error.err, payload.controlIndex))\n    )\n}\n\nexport const fetchHereIsochrones = payload => dispatch => {\n  dispatch(requestIsochronesResults(payload.controlIndex))\n\n  const isolineParameters = processIsolineSettings(\n    payload.settings,\n    payload.center\n  )\n\n  let url = new URL(\n      'https://isoline.route.api.here.com/routing/7.2/calculateisoline.json'\n    ),\n    params = {\n      app_id: payload.hereConfig.appId,\n      app_code: payload.hereConfig.appCode,\n      ...isolineParameters\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(handleResponse)\n    .then(data =>\n      dispatch(processIsochronesResponse(data, payload.controlIndex))\n    )\n    .catch(error =>\n      dispatch(\n        catchErrorIsochronesJSONResponse(error.err, payload.controlIndex)\n      )\n    )\n}\n\nexport const fetchHereReverseGeocode = payload => dispatch => {\n  dispatch(\n    requestGeocodeResults({ controlIndex: payload.isoIndex, reverse: true })\n  )\n\n  const radius = 250\n\n  let url = new URL(\n      'https://reverse.geocoder.api.here.com/6.2/reversegeocode.json'\n    ),\n    params = {\n      app_id: payload.hereConfig.appId,\n      app_code: payload.hereConfig.appCode,\n      mode: 'retrieveAddresses',\n      maxresults: 1,\n      prox: [payload.lat, payload.lng, radius].join(',')\n    }\n\n  url.search = new URLSearchParams(params)\n\n  return fetch(url)\n    .then(handleResponse)\n    .then(data =>\n      dispatch(\n        processGeocodeResponse(\n          data,\n          payload.isoIndex,\n          {\n            lat: payload.lat,\n            lng: payload.lng\n          },\n          true\n        )\n      )\n    )\n    .catch(error =>\n      dispatch(catchErrorGeocodeXMLResponse(error.err, payload.controlIndex))\n    )\n}\n\nexport const requestIsochronesResults = controlIndex => ({\n  type: REQUEST_ISOCHRONES_RESULTS,\n  controlIndex\n})\n\nexport const requestGeocodeResults = payload => ({\n  type: REQUEST_GEOCODE_RESULTS,\n  ...payload\n})\n\nexport const addIsochronesControl = () => ({\n  type: ADD_ISOCHRONESCONTROL,\n  payload: new SettingsObject()\n})\n\nexport const removeIsochronesControl = controlIndex => ({\n  type: REMOVE_ISOCHRONES_CONTROL,\n  payload: controlIndex\n})\n\nexport const updateTextInput = textInputIndex => ({\n  type: UPDATE_TEXTINPUT,\n  payload: textInputIndex\n})\n\nexport const updateSelectedAddress = textInputIndex => ({\n  type: UPDATE_SELECTED_ADDRESS,\n  payload: textInputIndex\n})\n\nexport const updateSettings = payload => ({\n  type: UPDATE_SETTINGS,\n  payload: payload\n})\n\nexport const resultHandler = payload => ({\n  type: RESULT_HANDLER,\n  receivedAt: Date.now(),\n  ...payload\n})\n","import {\n  ZOOM_TO_ISOCHRONES,\n  ZOOM_TO_POINT,\n  TOGGLE_ISOCHRONES,\n  DOWNLOAD_ISOCHRONES\n} from '../actions/map'\n\nconst initialState = {\n  event: null,\n  controlIdx: null,\n  receivedAt: null,\n  latLng: null\n}\n\nconst mapEvents = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case ZOOM_TO_ISOCHRONES:\n      return {\n        ...state,\n        event: action.type,\n        controlIndex: action.controlIndex,\n        receivedAt: action.receivedAt\n      }\n    case TOGGLE_ISOCHRONES:\n      return {\n        ...state,\n        event: action.type,\n        controlIndex: action.controlIndex,\n        receivedAt: action.receivedAt\n      }\n    case DOWNLOAD_ISOCHRONES:\n      return {\n        ...state,\n        event: action.type,\n        controlIndex: action.controlIndex,\n        receivedAt: action.receivedAt\n      }\n    case ZOOM_TO_POINT:\n      return {\n        ...state,\n        event: action.type,\n        latLng: action.latLng,\n        receivedAt: action.receivedAt\n      }\n    default:\n      return state\n  }\n}\n\nexport default mapEvents\n","import { RESULT_HANDLER } from '../actions/actions'\n\nconst handlerMessage = {\n  NO_GEOCODE_RESULTS:\n    'Sorry, unfortunately no addresses can be found, please try a different location.',\n  NO_ISOCHRONES_RESULTS:\n    'Sorry, unfortunately no isochrones can be computed, please try a different location.'\n}\n\nconst handlerTopic = {\n  NO_GEOCODE_RESULTS: 'Unable to find addresses here',\n  NO_ISOCHRONES_RESULTS: 'Unable to build isochrones here',\n  INVALID_CREDENTIALS:\n    'Sorry, your credentials seem to be invalid, please check again.'\n}\n\nconst initialState = {\n  handlerCode: null,\n  handlerMessage: null,\n  handlerTopic: null,\n  receivedAt: null\n}\n\nconst resultHandler = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case RESULT_HANDLER:\n      return {\n        ...state,\n        handlerCode: action.handlerCode,\n        handlerTopic: handlerTopic[action.handlerCode],\n        handlerMessage: action.handlerMessage\n          ? action.handlerMessage\n          : handlerMessage[action.handlerCode],\n        receivedAt: action.receivedAt\n      }\n    default:\n      return state\n  }\n}\n\nexport default resultHandler\n","export const SET_APP_ID = 'SET_APP_ID'\nexport const SET_APP_CODE = 'SET_APP_CODE'\n\nexport const setAppId = appId => ({\n  type: SET_APP_ID,\n  receivedAt: Date.now(),\n  appId\n})\n\nexport const setAppCode = appCode => ({\n  type: SET_APP_CODE,\n  receivedAt: Date.now(),\n  appCode\n})\n","import { SET_APP_ID, SET_APP_CODE } from '../actions/hereconfig'\n\nconst initialState = {\n  appId: 'yATlKFDZwdLtjHzyTeCK',\n  appCode: '0XXQyxbiCjVU7jN2URXuhg'\n}\n\nconsole.log(SET_APP_ID, SET_APP_CODE)\n\nconst hereConfig = (state = initialState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case SET_APP_ID:\n      console.log(action.type, action)\n\n      return {\n        ...state,\n        appId: action.appId,\n        receivedAt: action.receivedAt\n      }\n    case SET_APP_CODE:\n      return {\n        ...state,\n        appCode: action.appCode,\n        receivedAt: action.receivedAt\n      }\n    default:\n      return state\n  }\n}\n\nexport default hereConfig\n","import { combineReducers } from 'redux'\nimport {\n  REQUEST_GEOCODE_RESULTS,\n  REQUEST_ISOCHRONES_RESULTS,\n  RECEIVE_GEOCODE_RESULTS,\n  RECEIVE_REVERSE_GEOCODE_RESULTS,\n  RECEIVE_ISOCHRONES_RESULTS,\n  ADD_ISOCHRONESCONTROL,\n  REMOVE_ISOCHRONES_CONTROL,\n  UPDATE_TEXTINPUT,\n  UPDATE_SELECTED_ADDRESS,\n  UPDATE_SETTINGS,\n  HIDE_ISOCHRONES_INDEX\n} from '../actions/actions'\n\nimport mapEvents from './map'\nimport resultHandler from './resulthandler'\nimport hereConfig from './hereconfig'\n\nimport SettingsObject from '../Controls/SettingsObject'\n\nconst initialIsochronesControlsState = {\n  controls: [new SettingsObject()]\n}\n\nconst isochronesControls = (state = initialIsochronesControlsState, action) => {\n  console.log(action)\n  switch (action.type) {\n    case ADD_ISOCHRONESCONTROL:\n      return {\n        ...state,\n        controls: [...state.controls, action.payload]\n      }\n    case REMOVE_ISOCHRONES_CONTROL:\n      return {\n        ...state,\n        controls: state.controls.filter(\n          (item, i) => i !== action.payload.controlIndex\n        )\n      }\n    case UPDATE_TEXTINPUT:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.payload.controlIndex\n            ? { ...control, userInput: action.payload.inputValue }\n            : control\n        )\n      }\n    case HIDE_ISOCHRONES_INDEX:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? { ...control, isochronesHidden: !control.isochronesHidden }\n            : control\n        )\n      }\n    case REQUEST_ISOCHRONES_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? { ...control, isFetchingIsochrones: true }\n            : control\n        )\n      }\n    case REQUEST_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? { ...control, isFetching: true, reverse: action.reverse }\n            : control\n        )\n      }\n    case RECEIVE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetching: false,\n                geocodeResults: action.results,\n                reverse: action.reverse\n              }\n            : control\n        )\n      }\n    case RECEIVE_REVERSE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetching: false,\n                geocodeResults: action.results,\n                reverse: action.reverse\n              }\n            : control\n        )\n      }\n    case UPDATE_SELECTED_ADDRESS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.payload.controlIndex\n            ? {\n                ...control,\n                geocodeResults: control.geocodeResults.map(result =>\n                  result.title === action.payload.inputValue &&\n                  result.title.length > 0\n                    ? { ...result, selected: true }\n                    : { ...result, selected: false }\n                )\n              }\n            : control\n        )\n      }\n    case UPDATE_SETTINGS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                settings: action.payload.settings\n              }\n            : control\n        )\n      }\n    case RECEIVE_ISOCHRONES_RESULTS:\n      return {\n        ...state,\n        controls: state.controls.map((control, i) =>\n          i === action.controlIndex\n            ? {\n                ...control,\n                isFetchingIsochrones: false,\n                isochrones: {\n                  results: action.results,\n                  receivedAt: action.receivedAt\n                }\n              }\n            : control\n        )\n      }\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  isochronesControls,\n  mapEvents,\n  resultHandler,\n  hereConfig\n})\n\nexport default rootReducer\n","import * as L from 'leaflet'\n\nvar ExtraMarkers = {}\n\nExtraMarkers.Icon = L.Icon.extend({\n  options: {\n    iconSize: [35, 45],\n    iconAnchor: [17, 42],\n    popupAnchor: [1, -32],\n    shadowAnchor: [10, 12],\n    shadowSize: [36, 16],\n    className: '',\n    prefix: '',\n    extraClasses: '',\n    shape: 'circle',\n    icon: '',\n    innerHTML: '',\n    markerColor: 'red',\n    svgBorderColor: '#fff',\n    svgOpacity: 1,\n    iconColor: '#fff',\n    number: '',\n    svg: false\n  },\n  initialize: function(options) {\n    options = L.Util.setOptions(this, options)\n  },\n  createIcon: function() {\n    var div = document.createElement('div'),\n      options = this.options\n    if (options.icon) {\n      div.innerHTML = this._createInner()\n    }\n    if (options.innerHTML) {\n      div.innerHTML = options.innerHTML\n    }\n    if (options.bgPos) {\n      div.style.backgroundPosition =\n        -options.bgPos.x + 'px ' + -options.bgPos.y + 'px'\n    }\n    if (!options.svg) {\n      this._setIconStyles(div, options.shape + '-' + options.markerColor)\n    } else {\n      this._setIconStyles(div, 'svg')\n    }\n    return div\n  },\n  _createInner: function() {\n    var iconColorStyle = '',\n      iconNumber = '',\n      options = this.options\n    if (options.iconColor) {\n      iconColorStyle = \"style='color: \" + options.iconColor + \"' \"\n    }\n    if (options.number) {\n      iconNumber = \"number='\" + options.number + \"' \"\n    }\n    if (options.svg) {\n      var svg =\n        '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.529271 95.44922\" style=\"fill:' +\n        options.markerColor +\n        ';stroke:' +\n        options.svgBorderColor +\n        ';fill-opacity:' +\n        options.svgOpacity +\n        ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-139.52 -173.21)\"><path d=\"m174.28 173.21c-19.199 0.00035-34.764 15.355-34.764 34.297 0.007 6.7035 1.5591 12.813 5.7461 18.854l0.0234 0.0371 28.979 42.262 28.754-42.107c3.1982-5.8558 5.9163-11.544 6.0275-19.045-0.0001-18.942-15.565-34.298-34.766-34.297z\"/></g></svg>'\n      if (options.shape === 'square') {\n        svg =\n          '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.457038 96.523441\" style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-545.27 -658.39)\"><path d=\"m545.27 658.39v65.301h22.248l12.48 31.223 12.676-31.223h22.053v-65.301h-69.457z\"/></g></svg>'\n      }\n      if (options.shape === 'star') {\n        svg =\n          '<svg style=\"top:0; fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" viewBox=\"0 0 77.690999 101.4702\"><g transform=\"translate(-101.15 -162.97)\"><g transform=\"matrix(1 0 0 1.0165 -65.712 -150.28)\"><path d=\"m205.97 308.16-11.561 11.561h-16.346v16.346l-11.197 11.197 11.197 11.197v15.83h15.744l11.615 33.693 11.467-33.568 0.125-0.125h16.346v-16.346l11.197-11.197-11.197-11.197v-15.83h-15.83l-11.561-11.561z\"/></g></g></svg>'\n      }\n      if (options.shape === 'penta') {\n        svg =\n          '<svg style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\"   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 71.550368 96.362438\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-367.08 -289.9)\"><path d=\"m367.08 322.5 17.236-32.604h36.151l18.164 32.25-35.665 64.112z\"/></g></svg>'\n      }\n      return (\n        svg +\n        '<i ' +\n        iconNumber +\n        iconColorStyle +\n        \"class='\" +\n        options.extraClasses +\n        ' ' +\n        options.prefix +\n        ' ' +\n        options.icon +\n        \"'></i>\"\n      )\n    }\n    return (\n      '<i ' +\n      iconNumber +\n      iconColorStyle +\n      \"class='\" +\n      options.extraClasses +\n      ' ' +\n      options.prefix +\n      ' ' +\n      options.icon +\n      \"'></i>\"\n    )\n  },\n  _setIconStyles: function(img, name) {\n    var options = this.options,\n      size = L.point(options[name === 'shadow' ? 'shadowSize' : 'iconSize']),\n      anchor,\n      leafletName\n    if (name === 'shadow') {\n      anchor = L.point(options.shadowAnchor || options.iconAnchor)\n      leafletName = 'shadow'\n    } else {\n      anchor = L.point(options.iconAnchor)\n      leafletName = 'icon'\n    }\n    if (!anchor && size) {\n      anchor = size.divideBy(2, true)\n    }\n\n    img.className =\n      'leaflet-marker-' +\n      leafletName +\n      ' extra-marker extra-marker-' +\n      name +\n      ' ' +\n      options.className\n    if (anchor) {\n      img.style.marginLeft = -anchor.x + 'px'\n      img.style.marginTop = -anchor.y + 'px'\n    }\n    if (size) {\n      img.style.width = size.x + 'px'\n      img.style.height = size.y + 'px'\n    }\n  },\n  createShadow: function() {\n    var div = document.createElement('div')\n    this._setIconStyles(div, 'shadow')\n    return div\n  }\n})\n\nExtraMarkers.icon = function(options) {\n  return new ExtraMarkers.Icon(options)\n}\n\nexport default ExtraMarkers\n","import * as L from 'leaflet'\n\nvar HereTileLayer = {}\n\n// 🍂class TileLayer.HERE\n// Tile layer for HERE maps tiles.\nHereTileLayer.HERE = L.TileLayer.extend({\n  options: {\n    subdomains: '1234',\n    minZoom: 2,\n    maxZoom: 18,\n\n    // 🍂option scheme: String = 'normal.day'\n    // The \"map scheme\", as documented in the HERE API.\n    scheme: 'normal.day',\n\n    // 🍂option resource: String = 'maptile'\n    // The \"map resource\", as documented in the HERE API.\n    resource: 'maptile',\n\n    // 🍂option mapId: String = 'newest'\n    // Version of the map tiles to be used, or a hash of an unique map\n    mapId: 'newest',\n\n    // 🍂option format: String = 'png8'\n    // Image format to be used (`png8`, `png`, or `jpg`)\n    format: 'png8',\n\n    // 🍂option appId: String = ''\n    // Required option. The `app_id` provided as part of the HERE credentials\n    appId: '',\n\n    // 🍂option appCode: String = ''\n    // Required option. The `app_code` provided as part of the HERE credentials\n    appCode: ''\n  },\n\n  initialize: function initialize(options) {\n    options = L.setOptions(this, options)\n\n    // Decide if this scheme uses the aerial servers or the basemap servers\n    var schemeStart = options.scheme.split('.')[0]\n    options.tileResolution = 256\n\n    if (L.Browser.retina) {\n      options.tileResolution = 512\n    }\n\n    //    {Base URL}{Path}/{resource (tile type)}/{map id}/{scheme}/{zoom}/{column}/{row}/{size}/{format}\n    //    ?app_id={YOUR_APP_ID}\n    //    &app_code={YOUR_APP_CODE}\n    //    &{param}={value}\n\n    var path =\n      '/{resource}/2.1/{resource}/{mapId}/{scheme}/{z}/{x}/{y}/{tileResolution}/{format}?app_id={appId}&app_code={appCode}'\n    var attributionPath =\n      '/maptile/2.1/copyright/{mapId}?app_id={appId}&app_code={appCode}'\n\n    var tileServer = 'base.maps.api.here.com'\n    if (\n      // eslint-disable-next-line\n      schemeStart == 'satellite' ||\n      // eslint-disable-next-line\n      schemeStart == 'terrain' ||\n      // eslint-disable-next-line\n      schemeStart == 'hybrid'\n    ) {\n      tileServer = 'aerial.maps.api.here.com'\n    }\n    if (options.scheme.indexOf('.traffic.') !== -1) {\n      tileServer = 'traffic.maps.api.here.com'\n    }\n\n    var tileUrl = 'https://{s}.' + tileServer + path\n\n    this._attributionUrl = L.Util.template(\n      'https://1.' + tileServer + attributionPath,\n      this.options\n    )\n\n    L.TileLayer.prototype.initialize.call(this, tileUrl, options)\n\n    this._attributionText = ''\n  },\n\n  onAdd: function onAdd(map) {\n    L.TileLayer.prototype.onAdd.call(this, map)\n\n    if (!this._attributionBBoxes) {\n      this._fetchAttributionBBoxes()\n    }\n  },\n\n  onRemove: function onRemove(map) {\n    L.TileLayer.prototype.onRemove.call(this, map)\n\n    this._map.attributionControl.removeAttribution(this._attributionText)\n\n    this._map.off('moveend zoomend resetview', this._findCopyrightBBox, this)\n  },\n\n  _fetchAttributionBBoxes: function _onMapMove() {\n    var xmlhttp = new XMLHttpRequest()\n    xmlhttp.onreadystatechange = L.bind(function() {\n      // eslint-disable-next-line\n      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n        this._parseAttributionBBoxes(JSON.parse(xmlhttp.responseText))\n      }\n    }, this)\n    xmlhttp.open('GET', this._attributionUrl, true)\n    xmlhttp.send()\n  },\n\n  _parseAttributionBBoxes: function _parseAttributionBBoxes(json) {\n    if (!this._map) {\n      return\n    }\n    var providers = json[this.options.scheme.split('.')[0]] || json.normal\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].boxes) {\n        for (var j = 0; j < providers[i].boxes.length; j++) {\n          var box = providers[i].boxes[j]\n          providers[i].boxes[j] = L.latLngBounds([\n            [box[0], box[1]],\n            [box[2], box[3]]\n          ])\n        }\n      }\n    }\n\n    this._map.on('moveend zoomend resetview', this._findCopyrightBBox, this)\n\n    this._attributionProviders = providers\n\n    this._findCopyrightBBox()\n  },\n\n  _findCopyrightBBox: function _findCopyrightBBox() {\n    if (!this._map) {\n      return\n    }\n    var providers = this._attributionProviders\n    var visibleProviders = []\n    var zoom = this._map.getZoom()\n    var visibleBounds = this._map.getBounds()\n\n    for (var i = 0; i < providers.length; i++) {\n      if (providers[i].minLevel < zoom && providers[i].maxLevel > zoom)\n        if (!providers[i].boxes) {\n          // No boxes = attribution always visible\n          visibleProviders.push(providers[i])\n          break\n        }\n\n      for (var j = 0; j < providers[i].boxes.length; j++) {\n        var box = providers[i].boxes[j]\n        if (visibleBounds.overlaps(box)) {\n          visibleProviders.push(providers[i])\n          break\n        }\n      }\n    }\n\n    var attributions = [\n      '<a href=\"https://legal.here.com/terms/serviceterms/gb/\">HERE maps</a>'\n    ]\n    // eslint-disable-next-line\n    for (var i = 0; i < visibleProviders.length; i++) {\n      var provider = visibleProviders[i]\n      attributions.push(\n        '<abbr title=\"' + provider.alt + '\">' + provider.label + '</abbr>'\n      )\n    }\n\n    var attributionText = '© ' + attributions.join(', ') + '. '\n\n    if (attributionText !== this._attributionText) {\n      this._map.attributionControl.removeAttribution(this._attributionText)\n      this._map.attributionControl.addAttribution(\n        (this._attributionText = attributionText)\n      )\n    }\n  }\n})\n\nHereTileLayer.here = function(opts) {\n  return new HereTileLayer.HERE(opts)\n}\n\nexport default HereTileLayer\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport L from 'leaflet'\nimport chroma from 'chroma-js'\nimport ExtraMarkers from './extraMarkers'\nimport HereTileLayer from './hereTileLayer'\nimport {\n  fetchHereReverseGeocode,\n  hideIsochronesIndex\n} from '../actions/actions'\nimport PropTypes from 'prop-types'\nimport { saveAs } from 'file-saver'\n\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\n// const CartoDB_VoyagerLabelsUnder = L.tileLayer(\n//   'https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}{r}.png',\n//   {\n//     attribution:\n//       '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n//     subdomains: 'abcd',\n//     maxZoom: 19\n//   }\n// )\n\nconst hereReducedDay = HereTileLayer.here({\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA',\n  scheme: 'reduced.day'\n})\n\nconst hereHybridGreyDay = HereTileLayer.here({\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA',\n  scheme: 'hybrid.grey.day'\n})\n\nconst markersLayer = L.layerGroup()\n\nconst isochronesLayer = L.layerGroup()\n\nconst southWest = L.latLng(-90, -180),\n  northEast = L.latLng(90, 180),\n  bounds = L.latLngBounds(southWest, northEast)\n\nconst mapParams = {\n  center: [25.95681, -35.729687],\n  zoomControl: false,\n  maxBounds: bounds,\n  zoom: 2,\n  layers: [markersLayer, isochronesLayer, hereReducedDay]\n}\n\nclass Map extends React.Component {\n  static propTypes = {\n    isochronesControls: PropTypes.array.isRequired,\n    mapEvents: PropTypes.object,\n    hereConfig: PropTypes.object,\n    dispatch: PropTypes.func.isRequired\n  }\n  componentDidMount() {\n    this.map = L.map('map', mapParams)\n\n    var isochronesPane = this.map.createPane('isochronesPane')\n\n    isochronesPane.style.opacity = 0.9\n\n    const baseMaps = {\n      'HERE reduced.day': hereReducedDay,\n      'HERE hybrid.grey.day': hereHybridGreyDay\n    }\n\n    L.control.layers(baseMaps).addTo(this.map)\n\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n    const brand = L.control({\n      position: 'bottomright'\n    })\n    brand.onAdd = function(map) {\n      var div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://gis.ops.com\" target=\"_blank\"><div class=\"gis-ops-logo\"></div></a>'\n      return div\n    }\n    const hereLogo = L.control({\n      position: 'bottomright'\n    })\n\n    hereLogo.onAdd = function(map) {\n      var div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://developer.here.com/\" target=\"_blank\"><div class=\"here-logo\"></div></a>'\n      return div\n    }\n    this.map.addControl(brand)\n    this.map.addControl(hereLogo)\n  }\n\n  updateMarkers() {\n    const { isochronesControls } = this.props\n\n    //markersLayer.clearLayers()\n\n    let cnt = 0\n    for (let isochrones of isochronesControls) {\n      // add marker\n      if (isochrones.geocodeResults.length > 0) {\n        for (let location of isochrones.geocodeResults) {\n          if (location.selected) {\n            // if a address is geocoded normally, clear layer beforehand\n            if (!isochrones.reverse) this.clearLayerByIndex(cnt)\n            this.addIsochronesMarker(location, cnt, this.isMarkerPresent(cnt))\n          }\n        }\n      }\n\n      cnt += 1\n    }\n  }\n\n  getTooltipContent(settings, isochrone) {\n    let travelIcon = 'car'\n    if (settings.mode == 'car') {\n      travelIcon = 'car'\n    } else if (settings.mode == 'truck') {\n      travelIcon = 'truck'\n    } else if (settings.mode == 'pedestrian') {\n      travelIcon = 'male'\n    }\n\n    let rangeTypeIcon = 'arrows alternate horizontal'\n    if (settings.rangetype == 'time') rangeTypeIcon = 'clock'\n\n    return `<div class=\"ui list\">\n        <div class=\"item\">\n          <i class=\"${travelIcon} icon\"></i>\n          <div class=\"content\">\n            ${settings.mode}\n          </div>\n        </div>\n        <div class=\"item\">\n          <i class=\"${rangeTypeIcon} icon\"></i>\n          <div class=\"content\">\n            ${\n              settings.rangetype === 'time'\n                ? isochrone.range / 60 + ' minutes'\n                : isochrone.range / 1000 + ' kilometers'\n            }\n          </div>\n        </div>\n      </div>`\n  }\n\n  updateIsochrones(prevProps) {\n    const { isochronesControls } = this.props\n\n    isochronesLayer.clearLayers()\n\n    for (let i = 0; i < isochronesControls.length; i++) {\n      if (\n        isochronesControls[i].isochrones.results.length > 0 &&\n        isochronesControls[i].isochronesHidden == false\n        //&& isochronesControls[i].isochrones.receivedAt > prevIsochronesControls[i].isochrones.receivedAt\n      ) {\n        let cnt = 0\n        const isochroneResultsReversed =\n          isochronesControls[i].isochrones.results\n        const scaleHsl = chroma\n          .scale(['#f44242', '#f4be41', '#41f497'])\n          .mode('hsl')\n          .colors(isochronesControls[i].isochrones.results.length)\n\n        const { settings } = isochronesControls[i]\n\n        for (const isochrone of isochroneResultsReversed) {\n          for (const isochroneComponent of isochrone.component) {\n            this.addIsochrones(\n              isochroneComponent.shape,\n              this.getTooltipContent(settings, isochrone),\n              scaleHsl[cnt],\n              i\n            )\n          }\n          cnt += 1\n        }\n      }\n    }\n  }\n\n  saveGeojson(features) {\n    const geojson = features.toGeoJSON()\n\n    for (let feature of geojson.features) {\n      feature.properties.attribution =\n        'Isochrones were generated by the HERE Maps API. Please read HERE Maps terms of service for further information https://legal.here.com/terms/serviceterms/gb/'\n    }\n    var blob = new Blob([JSON.stringify(geojson)], {\n      type: 'text/plain;charset=utf-8'\n    })\n    const file = 'heremaps-isochrones.geojson'\n    saveAs(blob, file)\n  }\n\n  updateMap(prevProps) {\n    const { mapEvents } = this.props\n    if (mapEvents.receivedAt > prevProps.mapEvents.receivedAt) {\n      let eventFeatures = L.featureGroup()\n\n      switch (mapEvents.event) {\n        case 'ZOOM_TO_ISOCHRONES':\n          isochronesLayer.eachLayer(function(layer) {\n            if (layer.options.index === mapEvents.controlIndex)\n              eventFeatures.addLayer(layer)\n          })\n\n          this.map.fitBounds(eventFeatures.getBounds(), {\n            paddingTopLeft: [100, 100]\n          })\n\n          break\n        case 'TOGGLE_ISOCHRONES':\n          this.props.dispatch(hideIsochronesIndex(mapEvents.controlIndex))\n          break\n        case 'ZOOM_TO_POINT':\n          this.map.flyTo(mapEvents.latLng, 14)\n\n          break\n        case 'DOWNLOAD_ISOCHRONES':\n          isochronesLayer.eachLayer(function(layer) {\n            if (layer.options.index === mapEvents.controlIndex)\n              eventFeatures.addLayer(layer)\n          })\n          this.saveGeojson(eventFeatures)\n          break\n\n        default:\n          break\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.updateMarkers()\n    this.updateIsochrones(prevProps)\n    this.updateMap(prevProps)\n  }\n\n  clearLayerByIndex(idx) {\n    markersLayer.eachLayer(function(layer) {\n      if (layer.options.index === idx) markersLayer.removeLayer(layer)\n    })\n  }\n\n  isMarkerPresent(idx) {\n    let isPresent = false\n    markersLayer.eachLayer(function(layer) {\n      if (layer.options.index === idx) isPresent = true\n    })\n    return isPresent\n  }\n\n  updatePosition(obj) {\n    const { dispatch, hereConfig } = this.props\n    dispatch(\n      fetchHereReverseGeocode({\n        isoIndex: obj.isoIndex,\n        hereConfig: hereConfig,\n        ...obj.latLng\n      })\n    )\n  }\n\n  addIsochrones(geometry, tooltipContent, color, index) {\n    L.polygon(\n      geometry.map(function(coordString) {\n        return coordString.split(',')\n      }),\n      {\n        fillColor: color,\n        weight: 2,\n        opacity: 1,\n        color: 'white',\n        pane: 'isochronesPane',\n        index: index\n      }\n    )\n      .addTo(isochronesLayer)\n      .bindTooltip(tooltipContent, { permanent: false, sticky: true })\n  }\n  addIsochronesMarker(location, idx, isPresent = false) {\n    if (!isPresent) {\n      const isochronesMarker = ExtraMarkers.icon({\n        icon: 'fa-number',\n        markerColor: 'purple',\n        shape: 'star',\n        prefix: 'fa',\n        number: (idx + 1).toString()\n      })\n\n      const that = this\n\n      L.marker(location.displayposition, {\n        icon: isochronesMarker,\n        draggable: true,\n        index: idx\n      })\n        .addTo(markersLayer)\n        .bindTooltip(location.title + ', ' + location.description, {\n          permanent: false\n        })\n        .openTooltip()\n        .on('dragend', function(e) {\n          that.updatePosition({\n            latLng: e.target.getLatLng(),\n            isoIndex: e.target.options.index\n          })\n        })\n    } else {\n      markersLayer.eachLayer(function(layer) {\n        if (layer.options.index === idx) {\n          if (location.title.length > 0) {\n            if (layer.getTooltip()) {\n              layer.setTooltipContent(\n                location.title + ', ' + location.description\n              )\n            } else {\n              layer\n                .bindTooltip(location.title + ', ' + location.description, {\n                  permanent: false\n                })\n                .openTooltip()\n            }\n          } else {\n            layer.unbindTooltip()\n          }\n        }\n      })\n    }\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state, ownProps)\n  const isochronesControls = state.isochronesControls.controls\n  const mapEvents = state.mapEvents\n  const hereConfig = state.hereConfig\n  return {\n    isochronesControls,\n    mapEvents,\n    hereConfig\n  }\n}\n\nexport default connect(mapStateToProps)(Map)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Slider } from 'react-semantic-ui-range'\nimport {\n  Label,\n  Input,\n  Button,\n  Divider,\n  Accordion,\n  Icon,\n  Checkbox,\n  Form,\n  Radio,\n  Message\n} from 'semantic-ui-react'\nimport { updateSettings } from '../actions/actions'\nimport moment from 'moment'\nimport DatetimePicker from 'react-semantic-datetime'\n\nconst transportModes = {\n  pedestrian: {\n    type: ['fastest', 'shortest']\n  },\n  car: {\n    type: ['fastest', 'shortest', 'traffic'],\n    traffic: ['enabled', 'disabled'],\n    consumptionModel: ['default', 'standard'],\n    customConsumptionDetails: {}\n  },\n  truck: {\n    type: ['fastest'],\n    traffic: ['enabled', 'disabled'],\n    shippedHazardousGoods: [],\n    limitedWeight: {},\n    weightPerAxle: {},\n    height: {},\n    width: {},\n    length: {},\n    tunnelCategory: '',\n    consumptionModel: ['default', 'standard'],\n    customConsumptionDetails: {}\n  }\n}\n\nconst rangeTypes = {\n  distance: {},\n  time: {}\n}\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      activeIndex: 0,\n      timeEnabled: false,\n      apiMessageVisible: true\n    }\n  }\n\n  static propTypes = {\n    userTextInput: PropTypes.string,\n    results: PropTypes.array,\n    isFetching: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    controlindex: PropTypes.number.isRequired\n  }\n\n  updateSettings() {\n    const { controls, controlindex, dispatch } = this.props\n\n    dispatch(\n      updateSettings({\n        controlIndex: controlindex,\n        settings: controls[controlindex].settings\n      })\n    )\n  }\n\n  handleDismiss = () => {\n    this.setState({ apiMessageVisible: false })\n  }\n\n  handleClickAccordion = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  handleClickMode(mode) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.mode = mode\n\n    this.updateSettings()\n  }\n\n  handleClickDirection(direction) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.direction = direction\n\n    this.updateSettings()\n  }\n\n  handleClickTraffic(traffic) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.traffic = traffic\n\n    this.updateSettings()\n  }\n\n  handleClickTimeValue(timeVal) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.timeVal = timeVal\n\n    this.updateSettings()\n  }\n\n  handleRangetype(rangetype) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.rangetype = rangetype\n\n    this.updateSettings()\n  }\n\n  handleHazardousGoods(e, { value }) {\n    console.log(value)\n    const { controls, controlindex } = this.props\n\n    const indexOfVal = controls[\n      controlindex\n    ].settings.hgv.shippedHazardousGoods.indexOf(value)\n    if (indexOfVal > -1) {\n      controls[controlindex].settings.hgv.shippedHazardousGoods.splice(\n        indexOfVal,\n        1\n      )\n    } else {\n      controls[controlindex].settings.hgv.shippedHazardousGoods.push(value)\n    }\n\n    this.updateSettings()\n  }\n\n  handleTunnelCategory(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    const currentTunnelCat = controls[controlindex].settings.hgv.tunnelCategory\n    controls[controlindex].settings.hgv.tunnelCategory =\n      value == currentTunnelCat ? '' : value\n\n    this.updateSettings()\n  }\n\n  clearTunnelCategory() {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.hgv.tunnelCategory = ''\n    this.updateSettings()\n  }\n\n  handleEnableTime() {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.timeEnabled = !controls[controlindex]\n      .settings.timeEnabled\n\n    this.updateSettings()\n  }\n\n  handleEnableHgvSettings() {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.enableHgvSettings = !controls[controlindex]\n      .settings.enableHgvSettings\n\n    this.updateSettings()\n  }\n\n  handleHgvSetting(type, value) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.hgv[type] = value\n\n    this.updateSettings()\n  }\n\n  alignRangeInterval() {\n    const { controls, controlindex } = this.props\n\n    if (\n      controls[controlindex].settings.range.value <\n        controls[controlindex].settings.interval.value ||\n      controls[controlindex].settings.interval.value == ''\n    ) {\n      controls[controlindex].settings.interval.value =\n        controls[controlindex].settings.range.value\n    }\n\n    controls[controlindex].settings.interval.max =\n      controls[controlindex].settings.range.value\n  }\n\n  handleRangeValueChange(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    controls[controlindex].settings.range.value = value\n\n    this.alignRangeInterval()\n    this.updateSettings()\n  }\n\n  handleIntervalValueChange(e, { value }) {\n    const { controls, controlindex } = this.props\n\n    if (value <= controls[controlindex].settings.range.value) {\n      controls[controlindex].settings.interval.value = value\n      this.updateSettings()\n    }\n  }\n\n  render() {\n    const { controls, controlindex } = this.props\n\n    const rangetype =\n      controls[controlindex].settings.rangetype === 'time'\n        ? ' minutes'\n        : ' kilometers'\n\n    const rangeSettings = {\n      settings: {\n        ...controls[controlindex].settings.range,\n        start: controls[controlindex].settings.range.value,\n        onChange: value => {\n          controls[controlindex].settings.range.value = value\n\n          this.alignRangeInterval()\n          this.updateSettings()\n        }\n      }\n    }\n\n    const intervalSettings = {\n      settings: {\n        ...controls[controlindex].settings.interval,\n        start: controls[controlindex].settings.interval.value,\n        onChange: value => {\n          controls[controlindex].settings.interval.value = value\n\n          this.updateSettings()\n        }\n      }\n    }\n\n    const CheckBoxHazardous = ({ ...props }) => {\n      return (\n        <Checkbox\n          value={props.name}\n          label={props.name}\n          className=\"pr3 pb2\"\n          onChange={this.handleHazardousGoods.bind(this)}\n          checked={\n            controls[controlindex].settings.hgv.shippedHazardousGoods.indexOf(\n              props.name\n            ) > -1\n          }\n        />\n      )\n    }\n\n    const RadioTunnelCategory = ({ ...props }) => {\n      return (\n        <Radio\n          value={props.name}\n          label={props.name}\n          name=\"tunnelCategory\"\n          className=\"pr3 pb2\"\n          onChange={this.handleTunnelCategory.bind(this)}\n          checked={\n            controls[controlindex].settings.hgv.tunnelCategory == props.name\n          }\n        />\n      )\n    }\n\n    return (\n      <div className=\"mt3\">\n        {this.state.apiMessageVisible && (\n          <Message info onDismiss={this.handleDismiss}>\n            <p>\n              For further reading about the settings, please browse to the\n              &nbsp;\n              <a href=\"https://developer.here.com/documentation/routing/topics/resource-calculate-isoline.html\">\n                HERE API documentation\n              </a>\n              .\n            </p>\n          </Message>\n        )}\n        <Accordion>\n          <Accordion.Title\n            active={this.state.activeIndex === 1}\n            index={1}\n            onClick={this.handleClickAccordion}>\n            <Icon name=\"dropdown\" />\n            <Label size=\"small\" color=\"purple\">\n              {'Travel settings'}\n            </Label>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.activeIndex === 1}>\n            <div className=\"mt3\">\n              <div>\n                <Button.Group basic size=\"small\">\n                  {transportModes &&\n                    Object.keys(transportModes).map((key, i) => (\n                      <Button\n                        active={key === controls[controlindex].settings.mode}\n                        key={i}\n                        mode={key}\n                        onClick={() => this.handleClickMode(key)}>\n                        {key}\n                      </Button>\n                    ))}\n                </Button.Group>\n              </div>\n              <Divider />\n              <div>\n                <Label size=\"small\">{'Start | destination'}</Label>\n                <div className=\"mt3\">\n                  <Button.Group basic size=\"small\">\n                    <Button\n                      active={\n                        controls[controlindex].settings.direction == 'start'\n                      }\n                      key={'start'}\n                      onClick={() => this.handleClickDirection('start')}>\n                      {'start'}\n                    </Button>\n                    <Button\n                      active={\n                        controls[controlindex].settings.direction ==\n                        'destination'\n                      }\n                      key={'destination'}\n                      onClick={() => this.handleClickDirection('destination')}>\n                      {'destination'}\n                    </Button>\n                  </Button.Group>\n                </div>\n              </div>\n              {(controls[controlindex].settings.mode == 'truck' ||\n                controls[controlindex].settings.mode == 'car') && (\n                <div>\n                  <Divider />\n                  <div>\n                    <Label size=\"small\">{'Traffic'}</Label>\n                    <div className=\"mt3\">\n                      <Button.Group basic size=\"small\">\n                        <Button\n                          active={\n                            controls[controlindex].settings.traffic == 'enabled'\n                          }\n                          key={'enabled'}\n                          onClick={() => this.handleClickTraffic('enabled')}>\n                          {'enabled'}\n                        </Button>\n                        <Button\n                          active={\n                            controls[controlindex].settings.traffic ==\n                            'disabled'\n                          }\n                          key={'disabled'}\n                          onClick={() => this.handleClickTraffic('disabled')}>\n                          {'disabled'}\n                        </Button>\n                      </Button.Group>\n                    </div>\n                  </div>\n                  <Divider />\n                  <div>\n                    <Label size=\"small\">{'Departure | arrival'}</Label>\n                    <div className=\"mt3\">\n                      <div>\n                        <Checkbox\n                          slider\n                          onChange={() => {\n                            this.handleEnableTime()\n                          }}\n                        />\n                      </div>\n                      {controls[controlindex].settings.timeEnabled && (\n                        <div>\n                          <Button.Group basic size=\"mini\">\n                            <Button\n                              active={\n                                controls[controlindex].settings.direction ==\n                                'destination'\n                              }\n                              disabled>\n                              {'arrival'}\n                            </Button>\n                            <Button\n                              active={\n                                controls[controlindex].settings.direction ==\n                                'start'\n                              }\n                              disabled>\n                              {'departure'}\n                            </Button>\n                          </Button.Group>\n                          <div className=\"mt3\">\n                            <Form.Input\n                              action={{ color: 'purple', icon: 'calendar' }}\n                              actionPosition=\"left\"\n                              value={moment(\n                                controls[controlindex].settings.timeVal\n                              ).format('LLL')}\n                              fluid\n                            />\n                            <DatetimePicker\n                              color=\"purple\" // optional (default:teal)\n                              onChange={value => {\n                                this.handleClickTimeValue(value.toISOString())\n                              }} // Mandatory\n                              value={moment(\n                                controls[controlindex].settings.timeVal\n                              )} // Mandatory\n                              time={true} // optional to show time selection, just a date picket if false (default:true)\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              )}\n              {controls[controlindex].settings.mode == 'truck' && (\n                <div>\n                  <Divider />\n                  <Label size=\"small\">{'HGV Settings'}</Label>\n                  <div className=\"mt3\">\n                    <div>\n                      <Checkbox\n                        slider\n                        onChange={() => {\n                          this.handleEnableHgvSettings()\n                        }}\n                      />\n                    </div>\n                  </div>\n                  {controls[controlindex].settings.enableHgvSettings && (\n                    <div>\n                      <div>\n                        <Label size=\"small\">{'Height (meters)'}</Label>\n                        <div className=\"mt3\">\n                          <Slider\n                            discrete\n                            color=\"grey\"\n                            value={controls[controlindex].settings.hgv.height}\n                            inverted={false}\n                            settings={{\n                              start: controls[controlindex].settings.hgv.height,\n                              min: 0,\n                              max: 50,\n                              step: 1,\n                              onChange: value => {\n                                this.handleHgvSetting('height', value)\n                              }\n                            }}\n                          />\n                          <div className=\"mt2\">\n                            <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                              {controls[controlindex].settings.hgv.height}\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Width (meters)'}</Label>\n                        <div className=\"mt3\">\n                          <Slider\n                            discrete\n                            color=\"grey\"\n                            value={controls[controlindex].settings.hgv.width}\n                            inverted={false}\n                            settings={{\n                              start: controls[controlindex].settings.hgv.width,\n                              min: 0,\n                              max: 50,\n                              step: 1,\n                              onChange: value => {\n                                this.handleHgvSetting('width', value)\n                              }\n                            }}\n                          />\n                          <div className=\"mt2\">\n                            <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                              {controls[controlindex].settings.hgv.height}\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Length (meters)'}</Label>\n                        <div className=\"mt3\">\n                          <Slider\n                            discrete\n                            color=\"grey\"\n                            value={controls[controlindex].settings.hgv.length}\n                            inverted={false}\n                            settings={{\n                              start: controls[controlindex].settings.hgv.length,\n                              min: 0,\n                              max: 300,\n                              step: 1,\n                              onChange: value => {\n                                this.handleHgvSetting('length', value)\n                              }\n                            }}\n                          />\n                          <div className=\"mt2\">\n                            <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                              {controls[controlindex].settings.hgv.length}\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Weight (tons)'}</Label>\n                        <div className=\"mt3\">\n                          <Slider\n                            discrete\n                            color=\"grey\"\n                            value={controls[controlindex].settings.hgv.weight}\n                            inverted={false}\n                            settings={{\n                              start: controls[controlindex].settings.hgv.weight,\n                              min: 0,\n                              max: 1000,\n                              step: 10,\n                              onChange: value => {\n                                this.handleHgvSetting('weight', value)\n                              }\n                            }}\n                          />\n                          <div className=\"mt2\">\n                            <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                              {controls[controlindex].settings.hgv.weight}\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Weight per axle (tons)'}</Label>\n                        <div className=\"mt3\">\n                          <Slider\n                            discrete\n                            color=\"grey\"\n                            value={\n                              controls[controlindex].settings.hgv.weightPerAxle\n                            }\n                            inverted={false}\n                            settings={{\n                              start:\n                                controls[controlindex].settings.hgv\n                                  .weightPerAxle,\n                              min: 0,\n                              max: 1000,\n                              step: 10,\n                              onChange: value => {\n                                this.handleHgvSetting('weightPerAxle', value)\n                              }\n                            }}\n                          />\n                          <div className=\"mt2\">\n                            <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                              {\n                                controls[controlindex].settings.hgv\n                                  .weightPerAxle\n                              }\n                            </Label>\n                          </div>\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Trailers count'}</Label>\n                        <div className=\"mt3\">\n                          <Slider\n                            discrete\n                            color=\"grey\"\n                            value={\n                              controls[controlindex].settings.hgv.trailersCount\n                            }\n                            inverted={false}\n                            settings={{\n                              start:\n                                controls[controlindex].settings.hgv\n                                  .trailersCount,\n                              min: 0,\n                              max: 4,\n                              step: 1,\n                              onChange: value => {\n                                this.handleHgvSetting('trailersCount', value)\n                              }\n                            }}\n                          />\n                          <div className=\"mt2\">\n                            <div className=\"mt2\">\n                              <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                                {\n                                  controls[controlindex].settings.hgv\n                                    .trailersCount\n                                }\n                              </Label>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Hazardous Goods'}</Label>\n                        <div className=\"mt3\">\n                          <CheckBoxHazardous name=\"explosive\" />\n                          <CheckBoxHazardous name=\"gas\" />\n                          <CheckBoxHazardous name=\"flammable\" />\n                          <CheckBoxHazardous name=\"combustible\" />\n                          <CheckBoxHazardous name=\"organic\" />\n                          <CheckBoxHazardous name=\"poison\" />\n                          <CheckBoxHazardous name=\"radioActive\" />\n                          <CheckBoxHazardous name=\"corrosive\" />\n                          <CheckBoxHazardous name=\"poisonousInhalation\" />\n                          <CheckBoxHazardous name=\"harmfulToWater\" />\n                          <CheckBoxHazardous name=\"other\" />\n                        </div>\n                      </div>\n                      <Divider />\n                      <div>\n                        <Label size=\"small\">{'Tunnel category'}</Label>\n                        <div className=\"mt3\">\n                          <RadioTunnelCategory name=\"B\" />\n                          <RadioTunnelCategory name=\"C\" />\n                          <RadioTunnelCategory name=\"D\" />\n                          <RadioTunnelCategory name=\"E\" />\n                          <Button\n                            basic\n                            size=\"mini\"\n                            onClick={() => this.clearTunnelCategory()}>\n                            {'Clear'}\n                          </Button>\n                        </div>\n                      </div>\n                      <Divider />\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </Accordion.Content>\n          <Accordion.Title\n            active={this.state.activeIndex === 0}\n            index={0}\n            onClick={this.handleClickAccordion}>\n            <Icon name=\"dropdown\" />\n            <Label size=\"small\" color=\"purple\">\n              {'Range settings'}\n            </Label>\n          </Accordion.Title>\n          <Accordion.Content active={this.state.activeIndex === 0}>\n            <div className=\"mt3\">\n              <div className=\"mt3\">\n                <Label size=\"small\">{'Range type'}</Label>\n                <div className=\"mt3\">\n                  <Button.Group basic size=\"small\">\n                    {rangeTypes &&\n                      Object.keys(rangeTypes).map((key, i) => (\n                        <Button\n                          active={\n                            key === controls[controlindex].settings.rangetype\n                          }\n                          key={i}\n                          mode={key}\n                          onClick={() => this.handleRangetype(key)}>\n                          {key}\n                        </Button>\n                      ))}\n                  </Button.Group>\n                </div>\n              </div>\n            </div>\n            <Divider />\n            <div>\n              <Label size=\"small\">{'Maximum range'}</Label>\n              <div className=\"mt3\">\n                <Slider\n                  discrete\n                  color=\"grey\"\n                  value={controls[controlindex].settings.range.value}\n                  inverted={false}\n                  settings={rangeSettings.settings}\n                />\n                <div className=\"mt2 flex justify-between items-center\">\n                  <Input\n                    size=\"mini\"\n                    placeholder=\"Enter Value\"\n                    onChange={this.handleRangeValueChange.bind(this)}\n                  />\n                  <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                    {controls[controlindex].settings.range.value + rangetype}\n                  </Label>\n                </div>\n              </div>\n            </div>\n            <Divider />\n            <div>\n              <Label size=\"small\">{'Interval step'}</Label>\n              <div className=\"mt3\">\n                <Slider\n                  discrete\n                  color=\"grey\"\n                  value={controls[controlindex].settings.interval.value}\n                  inverted={false}\n                  settings={intervalSettings.settings}\n                />\n                <div className=\"mt2 flex justify-between items-center\">\n                  <Input\n                    size=\"mini\"\n                    placeholder=\"Enter Value\"\n                    onChange={this.handleIntervalValueChange.bind(this)}\n                  />\n                  <Label className=\"mt2\" color=\"grey\" size={'mini'}>\n                    {controls[controlindex].settings.interval.value + rangetype}\n                  </Label>\n                </div>\n              </div>\n            </div>\n          </Accordion.Content>\n        </Accordion>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { controls } = state.isochronesControls\n  return {\n    controls\n  }\n}\n\nexport default connect(mapStateToProps)(Settings)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Settings from './Settings'\nimport {\n  Segment,\n  Search,\n  Icon,\n  Container,\n  Popup,\n  Divider,\n  Button\n} from 'semantic-ui-react'\nimport {\n  updateTextInput,\n  fetchHereGeocode,\n  updateSelectedAddress,\n  removeIsochronesControl,\n  fetchHereIsochrones\n} from '../actions/actions'\n\nimport { zoomToPoint, zoomToIsochrones, toggleIsochrones, downloadIsochrones } from '../actions/map'\n\nimport InlineEdit from 'react-edit-inline2'\nimport { debounce } from 'throttle-debounce'\n\nclass SearchControl extends React.Component {\n  static propTypes = {\n    userTextInput: PropTypes.string.isRequired,\n    results: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    isFetchingIsochrones: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    isochronesResults: PropTypes.array,\n    controlindex: PropTypes.number.isRequired,\n    hereConfig: PropTypes.object\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.dataChanged = this.dataChanged.bind(this)\n\n    this.state = {\n      isochronesTitle: 'Isochrones -' + (props.controlindex + 1)\n    }\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleResultSelect = this.handleResultSelect.bind(this)\n    this.fetchGeocodeResults = debounce(1000, this.fetchGeocodeResults)\n  }\n\n  fetchGeocodeResults() {\n    const { dispatch, userTextInput, controlindex, hereConfig } = this.props\n    if (userTextInput.length > 0) {\n      dispatch(\n        fetchHereGeocode({\n          inputValue: userTextInput,\n          controlIndex: controlindex,\n          hereConfig: hereConfig\n        })\n      )\n    }\n  }\n\n  handleSearchChange = event => {\n    const { dispatch, controlindex } = this.props\n\n    dispatch(\n      updateTextInput({\n        inputValue: event.target.value,\n        controlIndex: controlindex\n      })\n    )\n    this.fetchGeocodeResults()\n  }\n\n  // handleSelectionChange = event => {\n  //   console.log(event.target.value);\n  // };\n\n  handleResultSelect = (e, { result }) => {\n    const { dispatch, controlindex } = this.props\n\n    dispatch(\n      updateTextInput({\n        inputValue: result.title,\n        controlIndex: controlindex\n      })\n    )\n\n    dispatch(\n      updateSelectedAddress({\n        inputValue: result.title,\n        controlIndex: controlindex\n      })\n    )\n\n    dispatch(zoomToPoint(result.displayposition))\n  }\n\n  customValidateText(text) {\n    return text.length > 0 && text.length < 64\n  }\n\n  dataChanged(data) {\n    this.setState({ ...data })\n  }\n\n  handleFetchIsochrones = () => {\n    const { dispatch, controlindex, controls, hereConfig } = this.props\n    console.log(hereConfig)\n    let displayposition\n    for (let result of controls[controlindex].geocodeResults) {\n      if (result.selected) displayposition = result.displayposition\n    }\n\n    dispatch(\n      fetchHereIsochrones({\n        controlIndex: controlindex,\n        settings: controls[controlindex].settings,\n        center: displayposition,\n        hereConfig: hereConfig\n      })\n    )\n  }\n\n  handleZoom = () => {\n    const { dispatch, controlindex } = this.props\n    dispatch(zoomToIsochrones(controlindex))\n  }\n\n  handleShow = () => {\n    const { dispatch, controlindex } = this.props\n    dispatch(toggleIsochrones(controlindex))\n  }\n\n  handleDownload = () => {\n\n    const { dispatch, controlindex } = this.props\n    dispatch(downloadIsochrones(controlindex))\n\n  }\n\n  render() {\n    const {\n      isFetching,\n      isFetchingIsochrones,\n      userTextInput,\n      results,\n      controls,\n      controlindex,\n      isochronesResults\n    } = this.props\n\n    const handleRemoveControl = () => {\n      if (controls.length > 1) {\n        this.props.dispatch(\n          removeIsochronesControl({ controlIndex: controlindex })\n        )\n      }\n    }\n\n    const isResultSelected = () => {\n      for (let result of results) {\n        if (result.selected) return false\n      }\n\n      return true\n    }\n    return (\n      <Segment style={{ margin: '20px' }}>\n        <div className=\"mb2 justify-between flex flex-row items-center\">\n          <div>\n            <Popup\n              trigger={<Icon name=\"pencil\" />}\n              content=\"Edit name\"\n              size=\"mini\"\n            />\n\n            <InlineEdit\n              validate={this.customValidateText}\n              activeClassName=\"editing\"\n              text={this.state.isochronesTitle}\n              paramName=\"isochronesTitle\"\n              change={this.dataChanged}\n              style={{\n                minWidth: 150,\n                display: 'inline-block',\n                margin: '0 0 0 0',\n                padding: 0,\n                fontWeight: 'bold',\n                fontSize: 15,\n                outline: 'none',\n                border: 'none'\n              }}\n            />\n          </div>\n          {isochronesResults && isochronesResults.length > 0 && (\n            <Popup\n              trigger={\n                <Button\n                  circular\n                  size=\"mini\"\n                  icon=\"cloud download\"\n                  style={{ float: 'right' }}\n                  onClick={this.handleDownload}\n                  className=\"pr3\"\n                />\n              }\n              content=\"Download polygons\"\n              size=\"mini\"\n            />\n          )}\n          {isochronesResults && isochronesResults.length > 0 && (\n            <Popup\n              trigger={\n                <Button\n                  circular\n                  size=\"mini\"\n                  icon=\"unhide\"\n                  style={{ float: 'right' }}\n                  onClick={this.handleShow}\n                  className=\"pr3\"\n                />\n              }\n              content=\"Toggle on map\"\n              size=\"mini\"\n            />\n          )}\n          {isochronesResults && isochronesResults.length > 0 && (\n            <Popup\n              trigger={\n                <Button\n                  circular\n                  icon=\"expand arrows alternate\"\n                  style={{ float: 'right' }}\n                  size=\"mini\"\n                  onClick={this.handleZoom}\n                  className=\"pr4\"\n                />\n              }\n              content=\"Zoom\"\n              size=\"mini\"\n            />\n          )}\n          <Popup\n            trigger={\n              <Button\n                circular\n                size=\"mini\"\n                icon=\"remove\"\n                style={{ float: 'right' }}\n                onClick={handleRemoveControl}\n              />\n            }\n            content=\"Remove\"\n            size=\"mini\"\n          />\n        </div>\n        <Divider fitted />\n        <div className=\"flex justify-between items-center mt3\">\n          <Search\n            onSearchChange={this.handleSearchChange}\n            onResultSelect={this.handleResultSelect}\n            type=\"text\"\n            fluid\n            input={{ fluid: true }}\n            loading={isFetching}\n            className=\"flex-grow-1 mr2\"\n            results={results}\n            value={userTextInput}\n            placeholder=\"Find Address ...\"\n          />\n          <Popup\n            trigger={\n              <Button\n                circular\n                loading={isFetchingIsochrones}\n                disabled={isResultSelected()}\n                color=\"purple\"\n                icon=\"globe\"\n                onClick={this.handleFetchIsochrones}\n              />\n            }\n            content=\"Compute isochrones\"\n            size=\"mini\"\n          />\n        </div>\n        <Container className=\"mt2\">\n          <Settings controlindex={controlindex} />\n        </Container>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userTextInput =\n    state.isochronesControls.controls[ownProps.controlindex].userInput\n  const results =\n    state.isochronesControls.controls[ownProps.controlindex].geocodeResults\n  const isochronesResults =\n    state.isochronesControls.controls[ownProps.controlindex].isochrones.results\n  const isFetching =\n    state.isochronesControls.controls[ownProps.controlindex].isFetching\n  const isFetchingIsochrones =\n    state.isochronesControls.controls[ownProps.controlindex]\n      .isFetchingIsochrones\n  const controls = state.isochronesControls.controls\n  const hereConfig = state.hereConfig\n\n  const mapEvents = state.mapEvents\n\n  return {\n    userTextInput,\n    results,\n    isFetching,\n    isFetchingIsochrones,\n    controls,\n    mapEvents,\n    hereConfig,\n    isochronesResults\n  }\n}\n\nexport default connect(mapStateToProps)(SearchControl)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {\n  Segment,\n  Button,\n  Popup,\n  Input,\n  Modal,\n  Image,\n  Header,\n  Divider\n} from 'semantic-ui-react'\nimport SearchControl from './SearchControl'\nimport { addIsochronesControl } from '../actions/actions'\nimport { setAppId, setAppCode } from '../actions/hereconfig'\n\nconst segmentStyle = {\n  zIndex: 999,\n  position: 'absolute',\n  width: '400px',\n  top: '10px',\n  left: '10px',\n  maxHeight: 'calc(100vh)',\n  padding: '0px'\n}\n\nclass Controls extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleAddIsochronesControl = this.handleAddIsochronesControl.bind(this)\n    this.state = {\n      settingsOpen: false\n    }\n  }\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    controls: PropTypes.array.isRequired,\n    hereConfig: PropTypes.object.isRequired\n  }\n\n  openSettings = () => this.setState({ settingsOpen: true })\n  closeSettings = () => this.setState({ settingsOpen: false })\n\n  handleAddIsochronesControl = () => {\n    this.props.dispatch(addIsochronesControl())\n  }\n\n  handleAppIdChange = event => {\n    const { dispatch } = this.props\n    dispatch(setAppId(event.target.value))\n  }\n\n  handleAppCodeChange = event => {\n    const { dispatch } = this.props\n    dispatch(setAppCode(event.target.value))\n  }\n\n  render() {\n    const { controls, hereConfig } = this.props\n    const { settingsOpen } = this.state\n    return (\n      <div>\n        <Segment className=\"flex flex-column\" style={segmentStyle}>\n          <div>\n            <div style={{ flex: 1, display: 'flex', minHeight: '0px' }}>\n              <div style={{ flex: 1, overflow: 'auto' }}>\n                <div\n                  style={{\n                    maxHeight: 'calc(100vh - 7vw)',\n                    overflow: 'auto'\n                  }}>\n                  {controls &&\n                    controls.map((object, i) => (\n                      <SearchControl key={i} controlindex={i} />\n                    ))}\n                  <div\n                    style={{\n                      marginLeft: '20px',\n                      marginBottom: '20px',\n                      marginTop: '0px'\n                    }}>\n                    <Popup\n                      trigger={\n                        <Button\n                          circular\n                          icon=\"plus\"\n                          className=\"ma3\"\n                          onClick={this.handleAddIsochronesControl}\n                        />\n                      }\n                      content=\"Add\"\n                      size=\"mini\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                height: '40px',\n                //borderTop: '1px solid #f7deff',\n                boxShadow: '2px -5px 5px -5px #333',\n                position: 'relative'\n              }}\n              className=\"flex justify-between items-center pa3\">\n              <span className=\"b f6\">\n                Reachability analysis powered by{' '}\n                <a\n                  href=\"https://developer.here.com/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  HERE Maps\n                </a>\n              </span>\n              <Popup\n                trigger={\n                  <Button\n                    circular\n                    icon=\"setting\"\n                    size=\"mini\"\n                    onClick={this.openSettings}\n                  />\n                }\n                content=\"Settings\"\n                size=\"mini\"\n              />\n            </div>\n          </div>\n        </Segment>\n        <Modal\n          size=\"tiny\"\n          dimmer=\"inverted\"\n          open={settingsOpen}\n          onClose={this.close}>\n          <Modal.Header>Settings</Modal.Header>\n          <Modal.Content image>\n            <Image\n              wrapped\n              size=\"small\"\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c7/HERE_logo.svg/527px-HERE_logo.svg.png\"\n            />\n            <Modal.Description>\n              <Header>\n                HERE credentials [*sign up{' '}\n                <a\n                  href=\"https://developer.here.com/?create=Freemium-Basic&keepState=true&step=account\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  <strong>here</strong>\n                </a>\n                ]\n              </Header>\n              <div>\n                {hereConfig && (\n                  <Input\n                    fluid\n                    label=\"app_code\"\n                    labelPosition=\"right\"\n                    placeholder=\"app_code\"\n                    onChange={this.handleAppCodeChange}\n                    value={hereConfig.appCode}\n                  />\n                )}\n              </div>\n              <Divider />\n              <div>\n                {hereConfig && (\n                  <Input\n                    fluid\n                    label=\"app_id\"\n                    labelPosition=\"right\"\n                    placeholder=\"app_id\"\n                    onChange={this.handleAppIdChange}\n                    value={hereConfig.appId}\n                  />\n                )}\n              </div>\n            </Modal.Description>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button\n              color=\"orange\"\n              content=\"Close\"\n              onClick={this.closeSettings}\n            />\n          </Modal.Actions>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { controls } = state.isochronesControls\n  const hereConfig = state.hereConfig\n  return {\n    controls,\n    hereConfig\n  }\n}\n\nexport default connect(mapStateToProps)(Controls)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport Map from './Map/Map'\nimport Controls from './Controls/Controls'\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts'\n\nclass App extends React.Component {\n  static propTypes = {\n    resultHandler: PropTypes.object\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { resultHandler } = this.props\n\n    toast({\n      type: 'info',\n      icon: 'info',\n      title: resultHandler.handlerTopic,\n      description: resultHandler.handlerMessage,\n      time: 5000\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Map />\n        <Controls className={'isoControls'} />\n        <SemanticToastContainer position=\"bottom-center\" />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { resultHandler } = state\n  return {\n    resultHandler\n  }\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}